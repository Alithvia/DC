--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datAddresses_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_Insert]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_Update]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_Delete]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_Select]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_SelectByCityID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_SelectByCityID]

IF OBJECT_ID(N'[dbo].[sp_datAddresses_DeleteByCityID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAddresses_DeleteByCityID]

--endregion

GO

--region [dbo].[sp_datAddresses_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_Insert]
	@Address nvarchar(50),
	@CityID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datAddresses] (
	[Address],
	[CityID]
) VALUES (
	@Address,
	@CityID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datAddresses_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_Update]
	@AddressID int,
	@Address nvarchar(50),
	@CityID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datAddresses] SET
	[Address] = @Address,
	[CityID] = @CityID
WHERE
	[AddressID] = @AddressID

--endregion

GO

--region [dbo].[sp_datAddresses_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_InsertUpdate]
	@AddressID int,
	@Address nvarchar(50),
	@CityID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [AddressID] FROM [dbo].[datAddresses] WHERE [AddressID] = @AddressID)
BEGIN
	UPDATE [dbo].[datAddresses] SET
		[Address] = @Address,
		[CityID] = @CityID
	WHERE
		[AddressID] = @AddressID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datAddresses] (
		[AddressID],
		[Address],
		[CityID]
	) VALUES (
		@AddressID,
		@Address,
		@CityID
	)
END

--endregion

GO

--region [dbo].[sp_datAddresses_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_Delete]
	@AddressID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datAddresses]
WHERE
	[AddressID] = @AddressID

--endregion

GO

--region [dbo].[sp_datAddresses_DeleteByCityID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_DeleteByCityID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_DeleteByCityID]
	@CityID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datAddresses]
WHERE
	[CityID] = @CityID

GO

--endregion

GO

--region [dbo].[sp_datAddresses_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datAddresses]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datAddresses_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_Select]
	@AddressID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AddressID],
	[Address],
	[CityID]
FROM
	[dbo].[datAddresses]
WHERE
	[AddressID] = @AddressID

--endregion

GO

--region [dbo].[sp_datAddresses_SelectByCityID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_SelectByCityID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_SelectByCityID]
	@CityID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AddressID],
	[Address],
	[CityID]
FROM
	[dbo].[datAddresses]
WHERE
	[CityID] = @CityID

--endregion

GO

--region [dbo].[sp_datAddresses_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[AddressID],
	[Address],
	[CityID]
FROM
	[dbo].[datAddresses]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datAddresses_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[AddressID],
	[Address],
	[CityID]
FROM
	[dbo].[datAddresses]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datAddresses_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AddressID],
	[Address],
	[CityID]
FROM
	[dbo].[datAddresses]

--endregion

GO

--region [dbo].[sp_datAddresses_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAddresses_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAddresses_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AddressID],
	[Address],
	[CityID]
FROM
	[dbo].[datAddresses]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datAssembly_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_Insert]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_Update]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_Delete]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_Select]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_SelectByAssemblyTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_SelectByAssemblyTypeID]

IF OBJECT_ID(N'[dbo].[sp_datAssembly_DeleteByAssemblyTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datAssembly_DeleteByAssemblyTypeID]

--endregion

GO

--region [dbo].[sp_datAssembly_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_Insert]
	@AssemblyTypeID int,
	@DateTime datetime,
	@Expiry datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datAssembly] (
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
) VALUES (
	@AssemblyTypeID,
	@DateTime,
	@Expiry
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datAssembly_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_Update]
	@AssemblyID int,
	@AssemblyTypeID int,
	@DateTime datetime,
	@Expiry datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[datAssembly] SET
	[AssemblyTypeID] = @AssemblyTypeID,
	[DateTime] = @DateTime,
	[Expiry] = @Expiry
WHERE
	[AssemblyID] = @AssemblyID

--endregion

GO

--region [dbo].[sp_datAssembly_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_InsertUpdate]
	@AssemblyID int,
	@AssemblyTypeID int,
	@DateTime datetime,
	@Expiry datetime
AS

SET NOCOUNT ON

IF EXISTS(SELECT [AssemblyID] FROM [dbo].[datAssembly] WHERE [AssemblyID] = @AssemblyID)
BEGIN
	UPDATE [dbo].[datAssembly] SET
		[AssemblyTypeID] = @AssemblyTypeID,
		[DateTime] = @DateTime,
		[Expiry] = @Expiry
	WHERE
		[AssemblyID] = @AssemblyID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datAssembly] (
		[AssemblyID],
		[AssemblyTypeID],
		[DateTime],
		[Expiry]
	) VALUES (
		@AssemblyID,
		@AssemblyTypeID,
		@DateTime,
		@Expiry
	)
END

--endregion

GO

--region [dbo].[sp_datAssembly_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_Delete]
	@AssemblyID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datAssembly]
WHERE
	[AssemblyID] = @AssemblyID

--endregion

GO

--region [dbo].[sp_datAssembly_DeleteByAssemblyTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_DeleteByAssemblyTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_DeleteByAssemblyTypeID]
	@AssemblyTypeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datAssembly]
WHERE
	[AssemblyTypeID] = @AssemblyTypeID

GO

--endregion

GO

--region [dbo].[sp_datAssembly_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datAssembly]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datAssembly_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_Select]
	@AssemblyID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyID],
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
FROM
	[dbo].[datAssembly]
WHERE
	[AssemblyID] = @AssemblyID

--endregion

GO

--region [dbo].[sp_datAssembly_SelectByAssemblyTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_SelectByAssemblyTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_SelectByAssemblyTypeID]
	@AssemblyTypeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyID],
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
FROM
	[dbo].[datAssembly]
WHERE
	[AssemblyTypeID] = @AssemblyTypeID

--endregion

GO

--region [dbo].[sp_datAssembly_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[AssemblyID],
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
FROM
	[dbo].[datAssembly]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datAssembly_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[AssemblyID],
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
FROM
	[dbo].[datAssembly]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datAssembly_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyID],
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
FROM
	[dbo].[datAssembly]

--endregion

GO

--region [dbo].[sp_datAssembly_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datAssembly_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datAssembly_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyID],
	[AssemblyTypeID],
	[DateTime],
	[Expiry]
FROM
	[dbo].[datAssembly]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datBoxes_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_Insert]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_Update]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_Delete]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_Select]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_SelectByAssemblyID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_SelectByAssemblyID]

IF OBJECT_ID(N'[dbo].[sp_datBoxes_DeleteByAssemblyID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datBoxes_DeleteByAssemblyID]

--endregion

GO

--region [dbo].[sp_datBoxes_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_Insert]
	@AssemblyID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datBoxes] (
	[AssemblyID]
) VALUES (
	@AssemblyID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datBoxes_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_Update]
	@BoxID int,
	@AssemblyID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datBoxes] SET
	[AssemblyID] = @AssemblyID
WHERE
	[BoxID] = @BoxID

--endregion

GO

--region [dbo].[sp_datBoxes_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_InsertUpdate]
	@BoxID int,
	@AssemblyID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [BoxID] FROM [dbo].[datBoxes] WHERE [BoxID] = @BoxID)
BEGIN
	UPDATE [dbo].[datBoxes] SET
		[AssemblyID] = @AssemblyID
	WHERE
		[BoxID] = @BoxID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datBoxes] (
		[BoxID],
		[AssemblyID]
	) VALUES (
		@BoxID,
		@AssemblyID
	)
END

--endregion

GO

--region [dbo].[sp_datBoxes_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_Delete]
	@BoxID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datBoxes]
WHERE
	[BoxID] = @BoxID

--endregion

GO

--region [dbo].[sp_datBoxes_DeleteByAssemblyID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_DeleteByAssemblyID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_DeleteByAssemblyID]
	@AssemblyID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datBoxes]
WHERE
	[AssemblyID] = @AssemblyID

GO

--endregion

GO

--region [dbo].[sp_datBoxes_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datBoxes]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datBoxes_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_Select]
	@BoxID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[BoxID],
	[AssemblyID]
FROM
	[dbo].[datBoxes]
WHERE
	[BoxID] = @BoxID

--endregion

GO

--region [dbo].[sp_datBoxes_SelectByAssemblyID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_SelectByAssemblyID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_SelectByAssemblyID]
	@AssemblyID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[BoxID],
	[AssemblyID]
FROM
	[dbo].[datBoxes]
WHERE
	[AssemblyID] = @AssemblyID

--endregion

GO

--region [dbo].[sp_datBoxes_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[BoxID],
	[AssemblyID]
FROM
	[dbo].[datBoxes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datBoxes_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[BoxID],
	[AssemblyID]
FROM
	[dbo].[datBoxes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datBoxes_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[BoxID],
	[AssemblyID]
FROM
	[dbo].[datBoxes]

--endregion

GO

--region [dbo].[sp_datBoxes_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datBoxes_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datBoxes_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[BoxID],
	[AssemblyID]
FROM
	[dbo].[datBoxes]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_Insert]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_Update]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_Delete]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_Select]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_SelectByClientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_SelectByClientID]

IF OBJECT_ID(N'[dbo].[sp_datClientOrders_DeleteByClientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClientOrders_DeleteByClientID]

--endregion

GO

--region [dbo].[sp_datClientOrders_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_Insert]
	@ClientID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datClientOrders] (
	[ClientID]
) VALUES (
	@ClientID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datClientOrders_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_Update]
	@OrderNumber int,
	@ClientID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datClientOrders] SET
	[ClientID] = @ClientID
WHERE
	[OrderNumber] = @OrderNumber

--endregion

GO

--region [dbo].[sp_datClientOrders_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_InsertUpdate]
	@OrderNumber int,
	@ClientID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [OrderNumber] FROM [dbo].[datClientOrders] WHERE [OrderNumber] = @OrderNumber)
BEGIN
	UPDATE [dbo].[datClientOrders] SET
		[ClientID] = @ClientID
	WHERE
		[OrderNumber] = @OrderNumber
END
ELSE
BEGIN
	INSERT INTO [dbo].[datClientOrders] (
		[OrderNumber],
		[ClientID]
	) VALUES (
		@OrderNumber,
		@ClientID
	)
END

--endregion

GO

--region [dbo].[sp_datClientOrders_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_Delete]
	@OrderNumber int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datClientOrders]
WHERE
	[OrderNumber] = @OrderNumber

--endregion

GO

--region [dbo].[sp_datClientOrders_DeleteByClientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_DeleteByClientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_DeleteByClientID]
	@ClientID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datClientOrders]
WHERE
	[ClientID] = @ClientID

GO

--endregion

GO

--region [dbo].[sp_datClientOrders_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datClientOrders]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datClientOrders_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_Select]
	@OrderNumber int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[OrderNumber],
	[ClientID]
FROM
	[dbo].[datClientOrders]
WHERE
	[OrderNumber] = @OrderNumber

--endregion

GO

--region [dbo].[sp_datClientOrders_SelectByClientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_SelectByClientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_SelectByClientID]
	@ClientID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[OrderNumber],
	[ClientID]
FROM
	[dbo].[datClientOrders]
WHERE
	[ClientID] = @ClientID

--endregion

GO

--region [dbo].[sp_datClientOrders_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[OrderNumber],
	[ClientID]
FROM
	[dbo].[datClientOrders]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datClientOrders_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[OrderNumber],
	[ClientID]
FROM
	[dbo].[datClientOrders]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datClientOrders_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[OrderNumber],
	[ClientID]
FROM
	[dbo].[datClientOrders]

--endregion

GO

--region [dbo].[sp_datClientOrders_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClientOrders_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClientOrders_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[OrderNumber],
	[ClientID]
FROM
	[dbo].[datClientOrders]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datClients_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_Insert]

IF OBJECT_ID(N'[dbo].[sp_datClients_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_Update]

IF OBJECT_ID(N'[dbo].[sp_datClients_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datClients_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_Delete]

IF OBJECT_ID(N'[dbo].[sp_datClients_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datClients_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_Select]

IF OBJECT_ID(N'[dbo].[sp_datClients_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datClients_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datClients_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datClients_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datClients_SelectPaged]

--endregion

GO

--region [dbo].[sp_datClients_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_Insert]
	@ClientName nvarchar(30)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datClients] (
	[ClientName]
) VALUES (
	@ClientName
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datClients_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_Update]
	@ClientID int,
	@ClientName nvarchar(30)
AS

SET NOCOUNT ON

UPDATE [dbo].[datClients] SET
	[ClientName] = @ClientName
WHERE
	[ClientID] = @ClientID

--endregion

GO

--region [dbo].[sp_datClients_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_InsertUpdate]
	@ClientID int,
	@ClientName nvarchar(30)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ClientID] FROM [dbo].[datClients] WHERE [ClientID] = @ClientID)
BEGIN
	UPDATE [dbo].[datClients] SET
		[ClientName] = @ClientName
	WHERE
		[ClientID] = @ClientID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datClients] (
		[ClientID],
		[ClientName]
	) VALUES (
		@ClientID,
		@ClientName
	)
END

--endregion

GO

--region [dbo].[sp_datClients_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_Delete]
	@ClientID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datClients]
WHERE
	[ClientID] = @ClientID

--endregion

GO

--region [dbo].[sp_datClients_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datClients]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datClients_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_Select]
	@ClientID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ClientID],
	[ClientName]
FROM
	[dbo].[datClients]
WHERE
	[ClientID] = @ClientID

--endregion

GO

--region [dbo].[sp_datClients_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ClientID],
	[ClientName]
FROM
	[dbo].[datClients]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datClients_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ClientID],
	[ClientName]
FROM
	[dbo].[datClients]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datClients_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ClientID],
	[ClientName]
FROM
	[dbo].[datClients]

--endregion

GO

--region [dbo].[sp_datClients_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datClients_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datClients_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ClientID],
	[ClientName]
FROM
	[dbo].[datClients]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datContacts_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_Insert]

IF OBJECT_ID(N'[dbo].[sp_datContacts_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_Update]

IF OBJECT_ID(N'[dbo].[sp_datContacts_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datContacts_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_Delete]

IF OBJECT_ID(N'[dbo].[sp_datContacts_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datContacts_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_Select]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectByPeopleID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectByPeopleID]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectByPhoneID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectByPhoneID]

IF OBJECT_ID(N'[dbo].[sp_datContacts_SelectByContactTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_SelectByContactTypeID]

IF OBJECT_ID(N'[dbo].[sp_datContacts_DeleteByPeopleID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_DeleteByPeopleID]

IF OBJECT_ID(N'[dbo].[sp_datContacts_DeleteByPhoneID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_DeleteByPhoneID]

IF OBJECT_ID(N'[dbo].[sp_datContacts_DeleteByContactTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datContacts_DeleteByContactTypeID]

--endregion

GO

--region [dbo].[sp_datContacts_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_Insert]
	@PeopleID int,
	@PhoneID int,
	@ContactTypeID tinyint
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datContacts] (
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
) VALUES (
	@PeopleID,
	@PhoneID,
	@ContactTypeID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datContacts_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_Update]
	@ContactID int,
	@PeopleID int,
	@PhoneID int,
	@ContactTypeID tinyint
AS

SET NOCOUNT ON

UPDATE [dbo].[datContacts] SET
	[PeopleID] = @PeopleID,
	[PhoneID] = @PhoneID,
	[ContactTypeID] = @ContactTypeID
WHERE
	[ContactID] = @ContactID

--endregion

GO

--region [dbo].[sp_datContacts_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_InsertUpdate]
	@ContactID int,
	@PeopleID int,
	@PhoneID int,
	@ContactTypeID tinyint
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ContactID] FROM [dbo].[datContacts] WHERE [ContactID] = @ContactID)
BEGIN
	UPDATE [dbo].[datContacts] SET
		[PeopleID] = @PeopleID,
		[PhoneID] = @PhoneID,
		[ContactTypeID] = @ContactTypeID
	WHERE
		[ContactID] = @ContactID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datContacts] (
		[ContactID],
		[PeopleID],
		[PhoneID],
		[ContactTypeID]
	) VALUES (
		@ContactID,
		@PeopleID,
		@PhoneID,
		@ContactTypeID
	)
END

--endregion

GO

--region [dbo].[sp_datContacts_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_Delete]
	@ContactID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datContacts]
WHERE
	[ContactID] = @ContactID

--endregion

GO

--region [dbo].[sp_datContacts_DeleteByPeopleID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_DeleteByPeopleID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_DeleteByPeopleID]
	@PeopleID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datContacts]
WHERE
	[PeopleID] = @PeopleID

GO

--endregion

GO

--region [dbo].[sp_datContacts_DeleteByPhoneID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_DeleteByPhoneID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_DeleteByPhoneID]
	@PhoneID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datContacts]
WHERE
	[PhoneID] = @PhoneID

GO

--endregion

GO

--region [dbo].[sp_datContacts_DeleteByContactTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_DeleteByContactTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_DeleteByContactTypeID]
	@ContactTypeID tinyint
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datContacts]
WHERE
	[ContactTypeID] = @ContactTypeID

GO

--endregion

GO

--region [dbo].[sp_datContacts_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datContacts]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datContacts_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_Select]
	@ContactID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]
WHERE
	[ContactID] = @ContactID

--endregion

GO

--region [dbo].[sp_datContacts_SelectByPeopleID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectByPeopleID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectByPeopleID]
	@PeopleID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]
WHERE
	[PeopleID] = @PeopleID

--endregion

GO

--region [dbo].[sp_datContacts_SelectByPhoneID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectByPhoneID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectByPhoneID]
	@PhoneID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]
WHERE
	[PhoneID] = @PhoneID

--endregion

GO

--region [dbo].[sp_datContacts_SelectByContactTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectByContactTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectByContactTypeID]
	@ContactTypeID tinyint
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]
WHERE
	[ContactTypeID] = @ContactTypeID

--endregion

GO

--region [dbo].[sp_datContacts_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datContacts_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datContacts_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]

--endregion

GO

--region [dbo].[sp_datContacts_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datContacts_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datContacts_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactID],
	[PeopleID],
	[PhoneID],
	[ContactTypeID]
FROM
	[dbo].[datContacts]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datEmployees_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_Insert]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_Update]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_Delete]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_Select]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_SelectByPositionID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_SelectByPositionID]

IF OBJECT_ID(N'[dbo].[sp_datEmployees_DeleteByPositionID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datEmployees_DeleteByPositionID]

--endregion

GO

--region [dbo].[sp_datEmployees_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_Insert]
	@PositionID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datEmployees] (
	[PositionID]
) VALUES (
	@PositionID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datEmployees_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_Update]
	@EmployeeID int,
	@PositionID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datEmployees] SET
	[PositionID] = @PositionID
WHERE
	[EmployeeID] = @EmployeeID

--endregion

GO

--region [dbo].[sp_datEmployees_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_InsertUpdate]
	@EmployeeID int,
	@PositionID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [EmployeeID] FROM [dbo].[datEmployees] WHERE [EmployeeID] = @EmployeeID)
BEGIN
	UPDATE [dbo].[datEmployees] SET
		[PositionID] = @PositionID
	WHERE
		[EmployeeID] = @EmployeeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datEmployees] (
		[EmployeeID],
		[PositionID]
	) VALUES (
		@EmployeeID,
		@PositionID
	)
END

--endregion

GO

--region [dbo].[sp_datEmployees_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_Delete]
	@EmployeeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datEmployees]
WHERE
	[EmployeeID] = @EmployeeID

--endregion

GO

--region [dbo].[sp_datEmployees_DeleteByPositionID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_DeleteByPositionID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_DeleteByPositionID]
	@PositionID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datEmployees]
WHERE
	[PositionID] = @PositionID

GO

--endregion

GO

--region [dbo].[sp_datEmployees_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datEmployees]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datEmployees_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_Select]
	@EmployeeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[EmployeeID],
	[PositionID]
FROM
	[dbo].[datEmployees]
WHERE
	[EmployeeID] = @EmployeeID

--endregion

GO

--region [dbo].[sp_datEmployees_SelectByPositionID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_SelectByPositionID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_SelectByPositionID]
	@PositionID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[EmployeeID],
	[PositionID]
FROM
	[dbo].[datEmployees]
WHERE
	[PositionID] = @PositionID

--endregion

GO

--region [dbo].[sp_datEmployees_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[EmployeeID],
	[PositionID]
FROM
	[dbo].[datEmployees]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datEmployees_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[EmployeeID],
	[PositionID]
FROM
	[dbo].[datEmployees]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datEmployees_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[EmployeeID],
	[PositionID]
FROM
	[dbo].[datEmployees]

--endregion

GO

--region [dbo].[sp_datEmployees_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datEmployees_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datEmployees_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[EmployeeID],
	[PositionID]
FROM
	[dbo].[datEmployees]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_Insert]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_Update]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_Delete]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_Select]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectByPurchaseID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectByPurchaseID]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectByIngredientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectByIngredientID]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_SelectByUnitsID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_SelectByUnitsID]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_DeleteByPurchaseID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_DeleteByPurchaseID]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_DeleteByIngredientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_DeleteByIngredientID]

IF OBJECT_ID(N'[dbo].[sp_datIngredientInventory_DeleteByUnitsID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datIngredientInventory_DeleteByUnitsID]

--endregion

GO

--region [dbo].[sp_datIngredientInventory_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_Insert]
	@PurchaseID int,
	@IngredientID int,
	@Amount float,
	@UnitsID int,
	@ExpDate date
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datIngredientInventory] (
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
) VALUES (
	@PurchaseID,
	@IngredientID,
	@Amount,
	@UnitsID,
	@ExpDate
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datIngredientInventory_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_Update]
	@IngInvID int,
	@PurchaseID int,
	@IngredientID int,
	@Amount float,
	@UnitsID int,
	@ExpDate date
AS

SET NOCOUNT ON

UPDATE [dbo].[datIngredientInventory] SET
	[PurchaseID] = @PurchaseID,
	[IngredientID] = @IngredientID,
	[Amount] = @Amount,
	[UnitsID] = @UnitsID,
	[ExpDate] = @ExpDate
WHERE
	[IngInvID] = @IngInvID

--endregion

GO

--region [dbo].[sp_datIngredientInventory_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_InsertUpdate]
	@IngInvID int,
	@PurchaseID int,
	@IngredientID int,
	@Amount float,
	@UnitsID int,
	@ExpDate date
AS

SET NOCOUNT ON

IF EXISTS(SELECT [IngInvID] FROM [dbo].[datIngredientInventory] WHERE [IngInvID] = @IngInvID)
BEGIN
	UPDATE [dbo].[datIngredientInventory] SET
		[PurchaseID] = @PurchaseID,
		[IngredientID] = @IngredientID,
		[Amount] = @Amount,
		[UnitsID] = @UnitsID,
		[ExpDate] = @ExpDate
	WHERE
		[IngInvID] = @IngInvID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datIngredientInventory] (
		[IngInvID],
		[PurchaseID],
		[IngredientID],
		[Amount],
		[UnitsID],
		[ExpDate]
	) VALUES (
		@IngInvID,
		@PurchaseID,
		@IngredientID,
		@Amount,
		@UnitsID,
		@ExpDate
	)
END

--endregion

GO

--region [dbo].[sp_datIngredientInventory_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_Delete]
	@IngInvID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datIngredientInventory]
WHERE
	[IngInvID] = @IngInvID

--endregion

GO

--region [dbo].[sp_datIngredientInventory_DeleteByPurchaseID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_DeleteByPurchaseID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_DeleteByPurchaseID]
	@PurchaseID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datIngredientInventory]
WHERE
	[PurchaseID] = @PurchaseID

GO

--endregion

GO

--region [dbo].[sp_datIngredientInventory_DeleteByIngredientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_DeleteByIngredientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_DeleteByIngredientID]
	@IngredientID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datIngredientInventory]
WHERE
	[IngredientID] = @IngredientID

GO

--endregion

GO

--region [dbo].[sp_datIngredientInventory_DeleteByUnitsID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_DeleteByUnitsID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_DeleteByUnitsID]
	@UnitsID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datIngredientInventory]
WHERE
	[UnitsID] = @UnitsID

GO

--endregion

GO

--region [dbo].[sp_datIngredientInventory_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datIngredientInventory]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datIngredientInventory_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_Select]
	@IngInvID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]
WHERE
	[IngInvID] = @IngInvID

--endregion

GO

--region [dbo].[sp_datIngredientInventory_SelectByPurchaseID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectByPurchaseID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectByPurchaseID]
	@PurchaseID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]
WHERE
	[PurchaseID] = @PurchaseID

--endregion

GO

--region [dbo].[sp_datIngredientInventory_SelectByIngredientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectByIngredientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectByIngredientID]
	@IngredientID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]
WHERE
	[IngredientID] = @IngredientID

--endregion

GO

--region [dbo].[sp_datIngredientInventory_SelectByUnitsID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectByUnitsID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectByUnitsID]
	@UnitsID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]
WHERE
	[UnitsID] = @UnitsID

--endregion

GO

--region [dbo].[sp_datIngredientInventory_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datIngredientInventory_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datIngredientInventory_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]

--endregion

GO

--region [dbo].[sp_datIngredientInventory_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datIngredientInventory_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datIngredientInventory_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngInvID],
	[PurchaseID],
	[IngredientID],
	[Amount],
	[UnitsID],
	[ExpDate]
FROM
	[dbo].[datIngredientInventory]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_Insert]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_Update]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_Delete]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_Select]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datMeasurements_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datMeasurements_SelectPaged]

--endregion

GO

--region [dbo].[sp_datMeasurements_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_Insert]
	@ParentID int,
	@DateTime datetime,
	@Thickness float,
	@Weight float,
	@Length float,
	@Width float,
	@Employee int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datMeasurements] (
	[ParentID],
	[DateTime],
	[Thickness],
	[Weight],
	[Length],
	[Width],
	[Employee]
) VALUES (
	@ParentID,
	@DateTime,
	@Thickness,
	@Weight,
	@Length,
	@Width,
	@Employee
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datMeasurements_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_Update]
	@MeasurementID int,
	@ParentID int,
	@DateTime datetime,
	@Thickness float,
	@Weight float,
	@Length float,
	@Width float,
	@Employee int
AS

SET NOCOUNT ON

UPDATE [dbo].[datMeasurements] SET
	[ParentID] = @ParentID,
	[DateTime] = @DateTime,
	[Thickness] = @Thickness,
	[Weight] = @Weight,
	[Length] = @Length,
	[Width] = @Width,
	[Employee] = @Employee
WHERE
	[MeasurementID] = @MeasurementID

--endregion

GO

--region [dbo].[sp_datMeasurements_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_InsertUpdate]
	@MeasurementID int,
	@ParentID int,
	@DateTime datetime,
	@Thickness float,
	@Weight float,
	@Length float,
	@Width float,
	@Employee int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [MeasurementID] FROM [dbo].[datMeasurements] WHERE [MeasurementID] = @MeasurementID)
BEGIN
	UPDATE [dbo].[datMeasurements] SET
		[ParentID] = @ParentID,
		[DateTime] = @DateTime,
		[Thickness] = @Thickness,
		[Weight] = @Weight,
		[Length] = @Length,
		[Width] = @Width,
		[Employee] = @Employee
	WHERE
		[MeasurementID] = @MeasurementID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datMeasurements] (
		[MeasurementID],
		[ParentID],
		[DateTime],
		[Thickness],
		[Weight],
		[Length],
		[Width],
		[Employee]
	) VALUES (
		@MeasurementID,
		@ParentID,
		@DateTime,
		@Thickness,
		@Weight,
		@Length,
		@Width,
		@Employee
	)
END

--endregion

GO

--region [dbo].[sp_datMeasurements_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_Delete]
	@MeasurementID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datMeasurements]
WHERE
	[MeasurementID] = @MeasurementID

--endregion

GO

--region [dbo].[sp_datMeasurements_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datMeasurements]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datMeasurements_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_Select]
	@MeasurementID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[MeasurementID],
	[ParentID],
	[DateTime],
	[Thickness],
	[Weight],
	[Length],
	[Width],
	[Employee]
FROM
	[dbo].[datMeasurements]
WHERE
	[MeasurementID] = @MeasurementID

--endregion

GO

--region [dbo].[sp_datMeasurements_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[MeasurementID],
	[ParentID],
	[DateTime],
	[Thickness],
	[Weight],
	[Length],
	[Width],
	[Employee]
FROM
	[dbo].[datMeasurements]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datMeasurements_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[MeasurementID],
	[ParentID],
	[DateTime],
	[Thickness],
	[Weight],
	[Length],
	[Width],
	[Employee]
FROM
	[dbo].[datMeasurements]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datMeasurements_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[MeasurementID],
	[ParentID],
	[DateTime],
	[Thickness],
	[Weight],
	[Length],
	[Width],
	[Employee]
FROM
	[dbo].[datMeasurements]

--endregion

GO

--region [dbo].[sp_datMeasurements_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datMeasurements_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datMeasurements_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[MeasurementID],
	[ParentID],
	[DateTime],
	[Thickness],
	[Weight],
	[Length],
	[Width],
	[Employee]
FROM
	[dbo].[datMeasurements]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datPackages_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_Insert]

IF OBJECT_ID(N'[dbo].[sp_datPackages_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_Update]

IF OBJECT_ID(N'[dbo].[sp_datPackages_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datPackages_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_Delete]

IF OBJECT_ID(N'[dbo].[sp_datPackages_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPackages_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_Select]

IF OBJECT_ID(N'[dbo].[sp_datPackages_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPackages_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datPackages_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datPackages_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datPackages_SelectByTrayID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_SelectByTrayID]

IF OBJECT_ID(N'[dbo].[sp_datPackages_DeleteByTrayID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPackages_DeleteByTrayID]

--endregion

GO

--region [dbo].[sp_datPackages_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_Insert]
	@PackageNumber nvarchar(50),
	@TrayID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datPackages] (
	[PackageNumber],
	[TrayID]
) VALUES (
	@PackageNumber,
	@TrayID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datPackages_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_Update]
	@PackageID int,
	@PackageNumber nvarchar(50),
	@TrayID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datPackages] SET
	[PackageNumber] = @PackageNumber,
	[TrayID] = @TrayID
WHERE
	[PackageID] = @PackageID

--endregion

GO

--region [dbo].[sp_datPackages_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_InsertUpdate]
	@PackageID int,
	@PackageNumber nvarchar(50),
	@TrayID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [PackageID] FROM [dbo].[datPackages] WHERE [PackageID] = @PackageID)
BEGIN
	UPDATE [dbo].[datPackages] SET
		[PackageNumber] = @PackageNumber,
		[TrayID] = @TrayID
	WHERE
		[PackageID] = @PackageID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datPackages] (
		[PackageID],
		[PackageNumber],
		[TrayID]
	) VALUES (
		@PackageID,
		@PackageNumber,
		@TrayID
	)
END

--endregion

GO

--region [dbo].[sp_datPackages_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_Delete]
	@PackageID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPackages]
WHERE
	[PackageID] = @PackageID

--endregion

GO

--region [dbo].[sp_datPackages_DeleteByTrayID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_DeleteByTrayID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_DeleteByTrayID]
	@TrayID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPackages]
WHERE
	[TrayID] = @TrayID

GO

--endregion

GO

--region [dbo].[sp_datPackages_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datPackages]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datPackages_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_Select]
	@PackageID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PackageID],
	[PackageNumber],
	[TrayID]
FROM
	[dbo].[datPackages]
WHERE
	[PackageID] = @PackageID

--endregion

GO

--region [dbo].[sp_datPackages_SelectByTrayID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_SelectByTrayID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_SelectByTrayID]
	@TrayID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PackageID],
	[PackageNumber],
	[TrayID]
FROM
	[dbo].[datPackages]
WHERE
	[TrayID] = @TrayID

--endregion

GO

--region [dbo].[sp_datPackages_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[PackageID],
	[PackageNumber],
	[TrayID]
FROM
	[dbo].[datPackages]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPackages_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[PackageID],
	[PackageNumber],
	[TrayID]
FROM
	[dbo].[datPackages]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPackages_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PackageID],
	[PackageNumber],
	[TrayID]
FROM
	[dbo].[datPackages]

--endregion

GO

--region [dbo].[sp_datPackages_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPackages_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPackages_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PackageID],
	[PackageNumber],
	[TrayID]
FROM
	[dbo].[datPackages]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datPeople_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_Insert]

IF OBJECT_ID(N'[dbo].[sp_datPeople_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_Update]

IF OBJECT_ID(N'[dbo].[sp_datPeople_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datPeople_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_Delete]

IF OBJECT_ID(N'[dbo].[sp_datPeople_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPeople_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_Select]

IF OBJECT_ID(N'[dbo].[sp_datPeople_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPeople_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datPeople_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datPeople_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPeople_SelectPaged]

--endregion

GO

--region [dbo].[sp_datPeople_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_Insert]
	@Name nvarchar(25),
	@Notes nvarchar(50),
	@Email nvarchar(30)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datPeople] (
	[Name],
	[Notes],
	[Email]
) VALUES (
	@Name,
	@Notes,
	@Email
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datPeople_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_Update]
	@PeopleID int,
	@Name nvarchar(25),
	@Notes nvarchar(50),
	@Email nvarchar(30)
AS

SET NOCOUNT ON

UPDATE [dbo].[datPeople] SET
	[Name] = @Name,
	[Notes] = @Notes,
	[Email] = @Email
WHERE
	[PeopleID] = @PeopleID

--endregion

GO

--region [dbo].[sp_datPeople_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_InsertUpdate]
	@PeopleID int,
	@Name nvarchar(25),
	@Notes nvarchar(50),
	@Email nvarchar(30)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [PeopleID] FROM [dbo].[datPeople] WHERE [PeopleID] = @PeopleID)
BEGIN
	UPDATE [dbo].[datPeople] SET
		[Name] = @Name,
		[Notes] = @Notes,
		[Email] = @Email
	WHERE
		[PeopleID] = @PeopleID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datPeople] (
		[PeopleID],
		[Name],
		[Notes],
		[Email]
	) VALUES (
		@PeopleID,
		@Name,
		@Notes,
		@Email
	)
END

--endregion

GO

--region [dbo].[sp_datPeople_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_Delete]
	@PeopleID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPeople]
WHERE
	[PeopleID] = @PeopleID

--endregion

GO

--region [dbo].[sp_datPeople_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datPeople]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datPeople_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_Select]
	@PeopleID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PeopleID],
	[Name],
	[Notes],
	[Email]
FROM
	[dbo].[datPeople]
WHERE
	[PeopleID] = @PeopleID

--endregion

GO

--region [dbo].[sp_datPeople_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[PeopleID],
	[Name],
	[Notes],
	[Email]
FROM
	[dbo].[datPeople]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPeople_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[PeopleID],
	[Name],
	[Notes],
	[Email]
FROM
	[dbo].[datPeople]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPeople_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PeopleID],
	[Name],
	[Notes],
	[Email]
FROM
	[dbo].[datPeople]

--endregion

GO

--region [dbo].[sp_datPeople_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPeople_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPeople_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PeopleID],
	[Name],
	[Notes],
	[Email]
FROM
	[dbo].[datPeople]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datPhones_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_Insert]

IF OBJECT_ID(N'[dbo].[sp_datPhones_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_Update]

IF OBJECT_ID(N'[dbo].[sp_datPhones_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datPhones_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_Delete]

IF OBJECT_ID(N'[dbo].[sp_datPhones_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPhones_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_Select]

IF OBJECT_ID(N'[dbo].[sp_datPhones_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPhones_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datPhones_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datPhones_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datPhones_SelectByPhoneTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_SelectByPhoneTypeID]

IF OBJECT_ID(N'[dbo].[sp_datPhones_DeleteByPhoneTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPhones_DeleteByPhoneTypeID]

--endregion

GO

--region [dbo].[sp_datPhones_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_Insert]
	@PhoneNumber nvarchar(11),
	@Ext nvarchar(6),
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datPhones] (
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
) VALUES (
	@PhoneNumber,
	@Ext,
	@PhoneTypeID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datPhones_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_Update]
	@PhoneID int,
	@PhoneNumber nvarchar(11),
	@Ext nvarchar(6),
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON

UPDATE [dbo].[datPhones] SET
	[PhoneNumber] = @PhoneNumber,
	[Ext] = @Ext,
	[PhoneTypeID] = @PhoneTypeID
WHERE
	[PhoneID] = @PhoneID

--endregion

GO

--region [dbo].[sp_datPhones_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_InsertUpdate]
	@PhoneID int,
	@PhoneNumber nvarchar(11),
	@Ext nvarchar(6),
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON

IF EXISTS(SELECT [PhoneID] FROM [dbo].[datPhones] WHERE [PhoneID] = @PhoneID)
BEGIN
	UPDATE [dbo].[datPhones] SET
		[PhoneNumber] = @PhoneNumber,
		[Ext] = @Ext,
		[PhoneTypeID] = @PhoneTypeID
	WHERE
		[PhoneID] = @PhoneID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datPhones] (
		[PhoneID],
		[PhoneNumber],
		[Ext],
		[PhoneTypeID]
	) VALUES (
		@PhoneID,
		@PhoneNumber,
		@Ext,
		@PhoneTypeID
	)
END

--endregion

GO

--region [dbo].[sp_datPhones_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_Delete]
	@PhoneID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPhones]
WHERE
	[PhoneID] = @PhoneID

--endregion

GO

--region [dbo].[sp_datPhones_DeleteByPhoneTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_DeleteByPhoneTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_DeleteByPhoneTypeID]
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPhones]
WHERE
	[PhoneTypeID] = @PhoneTypeID

GO

--endregion

GO

--region [dbo].[sp_datPhones_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datPhones]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datPhones_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_Select]
	@PhoneID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneID],
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
FROM
	[dbo].[datPhones]
WHERE
	[PhoneID] = @PhoneID

--endregion

GO

--region [dbo].[sp_datPhones_SelectByPhoneTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_SelectByPhoneTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_SelectByPhoneTypeID]
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneID],
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
FROM
	[dbo].[datPhones]
WHERE
	[PhoneTypeID] = @PhoneTypeID

--endregion

GO

--region [dbo].[sp_datPhones_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[PhoneID],
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
FROM
	[dbo].[datPhones]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPhones_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[PhoneID],
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
FROM
	[dbo].[datPhones]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPhones_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneID],
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
FROM
	[dbo].[datPhones]

--endregion

GO

--region [dbo].[sp_datPhones_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPhones_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPhones_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneID],
	[PhoneNumber],
	[Ext],
	[PhoneTypeID]
FROM
	[dbo].[datPhones]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_Insert]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_Update]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_Delete]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_Select]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_SelectByVendorID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_SelectByVendorID]

IF OBJECT_ID(N'[dbo].[sp_datPurchaseOrders_DeleteByVendorID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datPurchaseOrders_DeleteByVendorID]

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_Insert]
	@PONumber int,
	@VendorID int,
	@Date datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datPurchaseOrders] (
	[PONumber],
	[VendorID],
	[Date]
) VALUES (
	@PONumber,
	@VendorID,
	@Date
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_Update]
	@PurchaseID int,
	@PONumber int,
	@VendorID int,
	@Date datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[datPurchaseOrders] SET
	[PONumber] = @PONumber,
	[VendorID] = @VendorID,
	[Date] = @Date
WHERE
	[PurchaseID] = @PurchaseID

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_InsertUpdate]
	@PurchaseID int,
	@PONumber int,
	@VendorID int,
	@Date datetime
AS

SET NOCOUNT ON

IF EXISTS(SELECT [PurchaseID] FROM [dbo].[datPurchaseOrders] WHERE [PurchaseID] = @PurchaseID)
BEGIN
	UPDATE [dbo].[datPurchaseOrders] SET
		[PONumber] = @PONumber,
		[VendorID] = @VendorID,
		[Date] = @Date
	WHERE
		[PurchaseID] = @PurchaseID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datPurchaseOrders] (
		[PurchaseID],
		[PONumber],
		[VendorID],
		[Date]
	) VALUES (
		@PurchaseID,
		@PONumber,
		@VendorID,
		@Date
	)
END

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_Delete]
	@PurchaseID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPurchaseOrders]
WHERE
	[PurchaseID] = @PurchaseID

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_DeleteByVendorID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_DeleteByVendorID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_DeleteByVendorID]
	@VendorID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datPurchaseOrders]
WHERE
	[VendorID] = @VendorID

GO

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datPurchaseOrders]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_Select]
	@PurchaseID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PurchaseID],
	[PONumber],
	[VendorID],
	[Date]
FROM
	[dbo].[datPurchaseOrders]
WHERE
	[PurchaseID] = @PurchaseID

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_SelectByVendorID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_SelectByVendorID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_SelectByVendorID]
	@VendorID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PurchaseID],
	[PONumber],
	[VendorID],
	[Date]
FROM
	[dbo].[datPurchaseOrders]
WHERE
	[VendorID] = @VendorID

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[PurchaseID],
	[PONumber],
	[VendorID],
	[Date]
FROM
	[dbo].[datPurchaseOrders]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPurchaseOrders_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[PurchaseID],
	[PONumber],
	[VendorID],
	[Date]
FROM
	[dbo].[datPurchaseOrders]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datPurchaseOrders_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PurchaseID],
	[PONumber],
	[VendorID],
	[Date]
FROM
	[dbo].[datPurchaseOrders]

--endregion

GO

--region [dbo].[sp_datPurchaseOrders_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datPurchaseOrders_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datPurchaseOrders_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PurchaseID],
	[PONumber],
	[VendorID],
	[Date]
FROM
	[dbo].[datPurchaseOrders]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datShipments_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_Insert]

IF OBJECT_ID(N'[dbo].[sp_datShipments_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_Update]

IF OBJECT_ID(N'[dbo].[sp_datShipments_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datShipments_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_Delete]

IF OBJECT_ID(N'[dbo].[sp_datShipments_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datShipments_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_Select]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectByAddressID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectByAddressID]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectByOrderNumber]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectByOrderNumber]

IF OBJECT_ID(N'[dbo].[sp_datShipments_SelectByVehicleID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_SelectByVehicleID]

IF OBJECT_ID(N'[dbo].[sp_datShipments_DeleteByAddressID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_DeleteByAddressID]

IF OBJECT_ID(N'[dbo].[sp_datShipments_DeleteByOrderNumber]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_DeleteByOrderNumber]

IF OBJECT_ID(N'[dbo].[sp_datShipments_DeleteByVehicleID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datShipments_DeleteByVehicleID]

--endregion

GO

--region [dbo].[sp_datShipments_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_Insert]
	@AddressID int,
	@OrderNumber int,
	@VehicleID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datShipments] (
	[AddressID],
	[OrderNumber],
	[VehicleID]
) VALUES (
	@AddressID,
	@OrderNumber,
	@VehicleID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datShipments_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_Update]
	@ShipmentID int,
	@AddressID int,
	@OrderNumber int,
	@VehicleID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datShipments] SET
	[AddressID] = @AddressID,
	[OrderNumber] = @OrderNumber,
	[VehicleID] = @VehicleID
WHERE
	[ShipmentID] = @ShipmentID

--endregion

GO

--region [dbo].[sp_datShipments_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_InsertUpdate]
	@ShipmentID int,
	@AddressID int,
	@OrderNumber int,
	@VehicleID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ShipmentID] FROM [dbo].[datShipments] WHERE [ShipmentID] = @ShipmentID)
BEGIN
	UPDATE [dbo].[datShipments] SET
		[AddressID] = @AddressID,
		[OrderNumber] = @OrderNumber,
		[VehicleID] = @VehicleID
	WHERE
		[ShipmentID] = @ShipmentID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datShipments] (
		[ShipmentID],
		[AddressID],
		[OrderNumber],
		[VehicleID]
	) VALUES (
		@ShipmentID,
		@AddressID,
		@OrderNumber,
		@VehicleID
	)
END

--endregion

GO

--region [dbo].[sp_datShipments_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_Delete]
	@ShipmentID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datShipments]
WHERE
	[ShipmentID] = @ShipmentID

--endregion

GO

--region [dbo].[sp_datShipments_DeleteByAddressID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_DeleteByAddressID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_DeleteByAddressID]
	@AddressID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datShipments]
WHERE
	[AddressID] = @AddressID

GO

--endregion

GO

--region [dbo].[sp_datShipments_DeleteByOrderNumber]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_DeleteByOrderNumber]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_DeleteByOrderNumber]
	@OrderNumber int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datShipments]
WHERE
	[OrderNumber] = @OrderNumber

GO

--endregion

GO

--region [dbo].[sp_datShipments_DeleteByVehicleID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_DeleteByVehicleID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_DeleteByVehicleID]
	@VehicleID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datShipments]
WHERE
	[VehicleID] = @VehicleID

GO

--endregion

GO

--region [dbo].[sp_datShipments_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datShipments]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datShipments_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_Select]
	@ShipmentID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]
WHERE
	[ShipmentID] = @ShipmentID

--endregion

GO

--region [dbo].[sp_datShipments_SelectByAddressID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectByAddressID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectByAddressID]
	@AddressID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]
WHERE
	[AddressID] = @AddressID

--endregion

GO

--region [dbo].[sp_datShipments_SelectByOrderNumber]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectByOrderNumber]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectByOrderNumber]
	@OrderNumber int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]
WHERE
	[OrderNumber] = @OrderNumber

--endregion

GO

--region [dbo].[sp_datShipments_SelectByVehicleID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectByVehicleID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectByVehicleID]
	@VehicleID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]
WHERE
	[VehicleID] = @VehicleID

--endregion

GO

--region [dbo].[sp_datShipments_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datShipments_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datShipments_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]

--endregion

GO

--region [dbo].[sp_datShipments_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datShipments_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datShipments_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ShipmentID],
	[AddressID],
	[OrderNumber],
	[VehicleID]
FROM
	[dbo].[datShipments]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datTrays_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_Insert]

IF OBJECT_ID(N'[dbo].[sp_datTrays_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_Update]

IF OBJECT_ID(N'[dbo].[sp_datTrays_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datTrays_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_Delete]

IF OBJECT_ID(N'[dbo].[sp_datTrays_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datTrays_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_Select]

IF OBJECT_ID(N'[dbo].[sp_datTrays_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datTrays_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datTrays_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datTrays_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datTrays_SelectPaged]

--endregion

GO

--region [dbo].[sp_datTrays_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_Insert]
	@WorkStationID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datTrays] (
	[WorkStationID]
) VALUES (
	@WorkStationID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datTrays_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_Update]
	@TrayID int,
	@WorkStationID int
AS

SET NOCOUNT ON

UPDATE [dbo].[datTrays] SET
	[WorkStationID] = @WorkStationID
WHERE
	[TrayID] = @TrayID

--endregion

GO

--region [dbo].[sp_datTrays_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_InsertUpdate]
	@TrayID int,
	@WorkStationID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [TrayID] FROM [dbo].[datTrays] WHERE [TrayID] = @TrayID)
BEGIN
	UPDATE [dbo].[datTrays] SET
		[WorkStationID] = @WorkStationID
	WHERE
		[TrayID] = @TrayID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datTrays] (
		[TrayID],
		[WorkStationID]
	) VALUES (
		@TrayID,
		@WorkStationID
	)
END

--endregion

GO

--region [dbo].[sp_datTrays_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_Delete]
	@TrayID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datTrays]
WHERE
	[TrayID] = @TrayID

--endregion

GO

--region [dbo].[sp_datTrays_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datTrays]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datTrays_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_Select]
	@TrayID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TrayID],
	[WorkStationID]
FROM
	[dbo].[datTrays]
WHERE
	[TrayID] = @TrayID

--endregion

GO

--region [dbo].[sp_datTrays_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[TrayID],
	[WorkStationID]
FROM
	[dbo].[datTrays]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datTrays_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[TrayID],
	[WorkStationID]
FROM
	[dbo].[datTrays]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datTrays_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TrayID],
	[WorkStationID]
FROM
	[dbo].[datTrays]

--endregion

GO

--region [dbo].[sp_datTrays_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datTrays_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datTrays_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TrayID],
	[WorkStationID]
FROM
	[dbo].[datTrays]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_Insert]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_Update]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_Delete]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_Select]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_SelectByEmployeeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_SelectByEmployeeID]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_SelectByVehicleID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_SelectByVehicleID]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_DeleteByEmployeeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_DeleteByEmployeeID]

IF OBJECT_ID(N'[dbo].[sp_datVehicleCleaning_DeleteByVehicleID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicleCleaning_DeleteByVehicleID]

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_Insert]
	@VehicleID int,
	@EmployeeID int,
	@Date date
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datVehicleCleaning] (
	[VehicleID],
	[EmployeeID],
	[Date]
) VALUES (
	@VehicleID,
	@EmployeeID,
	@Date
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_Update]
	@CleaningID int,
	@VehicleID int,
	@EmployeeID int,
	@Date date
AS

SET NOCOUNT ON

UPDATE [dbo].[datVehicleCleaning] SET
	[VehicleID] = @VehicleID,
	[EmployeeID] = @EmployeeID,
	[Date] = @Date
WHERE
	[CleaningID] = @CleaningID

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_InsertUpdate]
	@CleaningID int,
	@VehicleID int,
	@EmployeeID int,
	@Date date
AS

SET NOCOUNT ON

IF EXISTS(SELECT [CleaningID] FROM [dbo].[datVehicleCleaning] WHERE [CleaningID] = @CleaningID)
BEGIN
	UPDATE [dbo].[datVehicleCleaning] SET
		[VehicleID] = @VehicleID,
		[EmployeeID] = @EmployeeID,
		[Date] = @Date
	WHERE
		[CleaningID] = @CleaningID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datVehicleCleaning] (
		[CleaningID],
		[VehicleID],
		[EmployeeID],
		[Date]
	) VALUES (
		@CleaningID,
		@VehicleID,
		@EmployeeID,
		@Date
	)
END

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_Delete]
	@CleaningID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datVehicleCleaning]
WHERE
	[CleaningID] = @CleaningID

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_DeleteByEmployeeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_DeleteByEmployeeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_DeleteByEmployeeID]
	@EmployeeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datVehicleCleaning]
WHERE
	[EmployeeID] = @EmployeeID

GO

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_DeleteByVehicleID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_DeleteByVehicleID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_DeleteByVehicleID]
	@VehicleID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datVehicleCleaning]
WHERE
	[VehicleID] = @VehicleID

GO

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datVehicleCleaning]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_Select]
	@CleaningID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]
WHERE
	[CleaningID] = @CleaningID

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_SelectByEmployeeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_SelectByEmployeeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_SelectByEmployeeID]
	@EmployeeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]
WHERE
	[EmployeeID] = @EmployeeID

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_SelectByVehicleID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_SelectByVehicleID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_SelectByVehicleID]
	@VehicleID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]
WHERE
	[VehicleID] = @VehicleID

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datVehicleCleaning_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datVehicleCleaning_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]

--endregion

GO

--region [dbo].[sp_datVehicleCleaning_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicleCleaning_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicleCleaning_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CleaningID],
	[VehicleID],
	[EmployeeID],
	[Date]
FROM
	[dbo].[datVehicleCleaning]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datVehicles_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_Insert]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_Update]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_Delete]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_Select]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_SelectByTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_SelectByTypeID]

IF OBJECT_ID(N'[dbo].[sp_datVehicles_DeleteByTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVehicles_DeleteByTypeID]

--endregion

GO

--region [dbo].[sp_datVehicles_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_Insert]
	@LicensePlate nvarchar(8),
	@TypeID int,
	@DatePurchased date
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datVehicles] (
	[LicensePlate],
	[TypeID],
	[DatePurchased]
) VALUES (
	@LicensePlate,
	@TypeID,
	@DatePurchased
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datVehicles_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_Update]
	@VehicleID int,
	@LicensePlate nvarchar(8),
	@TypeID int,
	@DatePurchased date
AS

SET NOCOUNT ON

UPDATE [dbo].[datVehicles] SET
	[LicensePlate] = @LicensePlate,
	[TypeID] = @TypeID,
	[DatePurchased] = @DatePurchased
WHERE
	[VehicleID] = @VehicleID

--endregion

GO

--region [dbo].[sp_datVehicles_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_InsertUpdate]
	@VehicleID int,
	@LicensePlate nvarchar(8),
	@TypeID int,
	@DatePurchased date
AS

SET NOCOUNT ON

IF EXISTS(SELECT [VehicleID] FROM [dbo].[datVehicles] WHERE [VehicleID] = @VehicleID)
BEGIN
	UPDATE [dbo].[datVehicles] SET
		[LicensePlate] = @LicensePlate,
		[TypeID] = @TypeID,
		[DatePurchased] = @DatePurchased
	WHERE
		[VehicleID] = @VehicleID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datVehicles] (
		[VehicleID],
		[LicensePlate],
		[TypeID],
		[DatePurchased]
	) VALUES (
		@VehicleID,
		@LicensePlate,
		@TypeID,
		@DatePurchased
	)
END

--endregion

GO

--region [dbo].[sp_datVehicles_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_Delete]
	@VehicleID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datVehicles]
WHERE
	[VehicleID] = @VehicleID

--endregion

GO

--region [dbo].[sp_datVehicles_DeleteByTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_DeleteByTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_DeleteByTypeID]
	@TypeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datVehicles]
WHERE
	[TypeID] = @TypeID

GO

--endregion

GO

--region [dbo].[sp_datVehicles_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datVehicles]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datVehicles_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_Select]
	@VehicleID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VehicleID],
	[LicensePlate],
	[TypeID],
	[DatePurchased]
FROM
	[dbo].[datVehicles]
WHERE
	[VehicleID] = @VehicleID

--endregion

GO

--region [dbo].[sp_datVehicles_SelectByTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_SelectByTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_SelectByTypeID]
	@TypeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VehicleID],
	[LicensePlate],
	[TypeID],
	[DatePurchased]
FROM
	[dbo].[datVehicles]
WHERE
	[TypeID] = @TypeID

--endregion

GO

--region [dbo].[sp_datVehicles_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VehicleID],
	[LicensePlate],
	[TypeID],
	[DatePurchased]
FROM
	[dbo].[datVehicles]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datVehicles_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[VehicleID],
	[LicensePlate],
	[TypeID],
	[DatePurchased]
FROM
	[dbo].[datVehicles]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datVehicles_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VehicleID],
	[LicensePlate],
	[TypeID],
	[DatePurchased]
FROM
	[dbo].[datVehicles]

--endregion

GO

--region [dbo].[sp_datVehicles_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVehicles_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVehicles_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VehicleID],
	[LicensePlate],
	[TypeID],
	[DatePurchased]
FROM
	[dbo].[datVehicles]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_datVendors_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_Insert]

IF OBJECT_ID(N'[dbo].[sp_datVendors_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_Update]

IF OBJECT_ID(N'[dbo].[sp_datVendors_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_datVendors_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_Delete]

IF OBJECT_ID(N'[dbo].[sp_datVendors_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_datVendors_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_Select]

IF OBJECT_ID(N'[dbo].[sp_datVendors_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_datVendors_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_datVendors_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_datVendors_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_datVendors_SelectPaged]

--endregion

GO

--region [dbo].[sp_datVendors_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_Insert]
	@VendorName nvarchar(30)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[datVendors] (
	[VendorName]
) VALUES (
	@VendorName
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_datVendors_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_Update]
	@VendorID int,
	@VendorName nvarchar(30)
AS

SET NOCOUNT ON

UPDATE [dbo].[datVendors] SET
	[VendorName] = @VendorName
WHERE
	[VendorID] = @VendorID

--endregion

GO

--region [dbo].[sp_datVendors_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_InsertUpdate]
	@VendorID int,
	@VendorName nvarchar(30)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [VendorID] FROM [dbo].[datVendors] WHERE [VendorID] = @VendorID)
BEGIN
	UPDATE [dbo].[datVendors] SET
		[VendorName] = @VendorName
	WHERE
		[VendorID] = @VendorID
END
ELSE
BEGIN
	INSERT INTO [dbo].[datVendors] (
		[VendorID],
		[VendorName]
	) VALUES (
		@VendorID,
		@VendorName
	)
END

--endregion

GO

--region [dbo].[sp_datVendors_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_Delete]
	@VendorID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[datVendors]
WHERE
	[VendorID] = @VendorID

--endregion

GO

--region [dbo].[sp_datVendors_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[datVendors]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_datVendors_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_Select]
	@VendorID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VendorID],
	[VendorName]
FROM
	[dbo].[datVendors]
WHERE
	[VendorID] = @VendorID

--endregion

GO

--region [dbo].[sp_datVendors_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[VendorID],
	[VendorName]
FROM
	[dbo].[datVendors]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datVendors_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[VendorID],
	[VendorName]
FROM
	[dbo].[datVendors]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_datVendors_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VendorID],
	[VendorName]
FROM
	[dbo].[datVendors]

--endregion

GO

--region [dbo].[sp_datVendors_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_datVendors_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_datVendors_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[VendorID],
	[VendorName]
FROM
	[dbo].[datVendors]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_Insert]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_Update]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_Delete]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_Select]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_HACCPTemps_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTemps_SelectPaged]

--endregion

GO

--region [dbo].[sp_HACCPTemps_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_Insert]
	@ParentID int,
	@Temp float,
	@DateTime datetime
AS

SET NOCOUNT ON

INSERT INTO [dbo].[HACCPTemps] (
	[ParentID],
	[Temp],
	[DateTime]
) VALUES (
	@ParentID,
	@Temp,
	@DateTime
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_HACCPTemps_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_Update]
	@TempID int,
	@ParentID int,
	@Temp float,
	@DateTime datetime
AS

SET NOCOUNT ON

UPDATE [dbo].[HACCPTemps] SET
	[ParentID] = @ParentID,
	[Temp] = @Temp,
	[DateTime] = @DateTime
WHERE
	[TempID] = @TempID

--endregion

GO

--region [dbo].[sp_HACCPTemps_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_InsertUpdate]
	@TempID int,
	@ParentID int,
	@Temp float,
	@DateTime datetime
AS

SET NOCOUNT ON

IF EXISTS(SELECT [TempID] FROM [dbo].[HACCPTemps] WHERE [TempID] = @TempID)
BEGIN
	UPDATE [dbo].[HACCPTemps] SET
		[ParentID] = @ParentID,
		[Temp] = @Temp,
		[DateTime] = @DateTime
	WHERE
		[TempID] = @TempID
END
ELSE
BEGIN
	INSERT INTO [dbo].[HACCPTemps] (
		[TempID],
		[ParentID],
		[Temp],
		[DateTime]
	) VALUES (
		@TempID,
		@ParentID,
		@Temp,
		@DateTime
	)
END

--endregion

GO

--region [dbo].[sp_HACCPTemps_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_Delete]
	@TempID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[HACCPTemps]
WHERE
	[TempID] = @TempID

--endregion

GO

--region [dbo].[sp_HACCPTemps_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[HACCPTemps]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_HACCPTemps_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_Select]
	@TempID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TempID],
	[ParentID],
	[Temp],
	[DateTime]
FROM
	[dbo].[HACCPTemps]
WHERE
	[TempID] = @TempID

--endregion

GO

--region [dbo].[sp_HACCPTemps_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[TempID],
	[ParentID],
	[Temp],
	[DateTime]
FROM
	[dbo].[HACCPTemps]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_HACCPTemps_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[TempID],
	[ParentID],
	[Temp],
	[DateTime]
FROM
	[dbo].[HACCPTemps]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_HACCPTemps_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TempID],
	[ParentID],
	[Temp],
	[DateTime]
FROM
	[dbo].[HACCPTemps]

--endregion

GO

--region [dbo].[sp_HACCPTemps_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTemps_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTemps_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TempID],
	[ParentID],
	[Temp],
	[DateTime]
FROM
	[dbo].[HACCPTemps]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_Insert]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_Update]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_Delete]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_Select]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_SelectByTimeTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_SelectByTimeTypeID]

IF OBJECT_ID(N'[dbo].[sp_HACCPTimes_DeleteByTimeTypeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_HACCPTimes_DeleteByTimeTypeID]

--endregion

GO

--region [dbo].[sp_HACCPTimes_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_Insert]
	@ParentID int,
	@DateTime datetime,
	@TimeTypeID int,
	@EmployeeID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[HACCPTimes] (
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
) VALUES (
	@ParentID,
	@DateTime,
	@TimeTypeID,
	@EmployeeID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_HACCPTimes_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_Update]
	@TimeID int,
	@ParentID int,
	@DateTime datetime,
	@TimeTypeID int,
	@EmployeeID int
AS

SET NOCOUNT ON

UPDATE [dbo].[HACCPTimes] SET
	[ParentID] = @ParentID,
	[DateTime] = @DateTime,
	[TimeTypeID] = @TimeTypeID,
	[EmployeeID] = @EmployeeID
WHERE
	[TimeID] = @TimeID

--endregion

GO

--region [dbo].[sp_HACCPTimes_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_InsertUpdate]
	@TimeID int,
	@ParentID int,
	@DateTime datetime,
	@TimeTypeID int,
	@EmployeeID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [TimeID] FROM [dbo].[HACCPTimes] WHERE [TimeID] = @TimeID)
BEGIN
	UPDATE [dbo].[HACCPTimes] SET
		[ParentID] = @ParentID,
		[DateTime] = @DateTime,
		[TimeTypeID] = @TimeTypeID,
		[EmployeeID] = @EmployeeID
	WHERE
		[TimeID] = @TimeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[HACCPTimes] (
		[TimeID],
		[ParentID],
		[DateTime],
		[TimeTypeID],
		[EmployeeID]
	) VALUES (
		@TimeID,
		@ParentID,
		@DateTime,
		@TimeTypeID,
		@EmployeeID
	)
END

--endregion

GO

--region [dbo].[sp_HACCPTimes_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_Delete]
	@TimeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[HACCPTimes]
WHERE
	[TimeID] = @TimeID

--endregion

GO

--region [dbo].[sp_HACCPTimes_DeleteByTimeTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_DeleteByTimeTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_DeleteByTimeTypeID]
	@TimeTypeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[HACCPTimes]
WHERE
	[TimeTypeID] = @TimeTypeID

GO

--endregion

GO

--region [dbo].[sp_HACCPTimes_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[HACCPTimes]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_HACCPTimes_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_Select]
	@TimeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeID],
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
FROM
	[dbo].[HACCPTimes]
WHERE
	[TimeID] = @TimeID

--endregion

GO

--region [dbo].[sp_HACCPTimes_SelectByTimeTypeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_SelectByTimeTypeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_SelectByTimeTypeID]
	@TimeTypeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeID],
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
FROM
	[dbo].[HACCPTimes]
WHERE
	[TimeTypeID] = @TimeTypeID

--endregion

GO

--region [dbo].[sp_HACCPTimes_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[TimeID],
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
FROM
	[dbo].[HACCPTimes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_HACCPTimes_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[TimeID],
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
FROM
	[dbo].[HACCPTimes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_HACCPTimes_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeID],
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
FROM
	[dbo].[HACCPTimes]

--endregion

GO

--region [dbo].[sp_HACCPTimes_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_HACCPTimes_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_HACCPTimes_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeID],
	[ParentID],
	[DateTime],
	[TimeTypeID],
	[EmployeeID]
FROM
	[dbo].[HACCPTimes]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_Insert]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_Update]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_Delete]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_Select]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_SelectByIngInvID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_SelectByIngInvID]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_SelectByUnitsID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_SelectByUnitsID]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_DeleteByIngInvID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_DeleteByIngInvID]

IF OBJECT_ID(N'[dbo].[sp_jncAssembly_DeleteByUnitsID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncAssembly_DeleteByUnitsID]

--endregion

GO

--region [dbo].[sp_jncAssembly_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_Insert]
	@AssemblyID int,
	@Quantity float,
	@UnitsID int,
	@IngInvID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[jncAssembly] (
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
) VALUES (
	@AssemblyID,
	@Quantity,
	@UnitsID,
	@IngInvID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_jncAssembly_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_Update]
	@IngredientAssemblyID int,
	@AssemblyID int,
	@Quantity float,
	@UnitsID int,
	@IngInvID int
AS

SET NOCOUNT ON

UPDATE [dbo].[jncAssembly] SET
	[AssemblyID] = @AssemblyID,
	[Quantity] = @Quantity,
	[UnitsID] = @UnitsID,
	[IngInvID] = @IngInvID
WHERE
	[IngredientAssemblyID] = @IngredientAssemblyID

--endregion

GO

--region [dbo].[sp_jncAssembly_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_InsertUpdate]
	@IngredientAssemblyID int,
	@AssemblyID int,
	@Quantity float,
	@UnitsID int,
	@IngInvID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [IngredientAssemblyID] FROM [dbo].[jncAssembly] WHERE [IngredientAssemblyID] = @IngredientAssemblyID)
BEGIN
	UPDATE [dbo].[jncAssembly] SET
		[AssemblyID] = @AssemblyID,
		[Quantity] = @Quantity,
		[UnitsID] = @UnitsID,
		[IngInvID] = @IngInvID
	WHERE
		[IngredientAssemblyID] = @IngredientAssemblyID
END
ELSE
BEGIN
	INSERT INTO [dbo].[jncAssembly] (
		[IngredientAssemblyID],
		[AssemblyID],
		[Quantity],
		[UnitsID],
		[IngInvID]
	) VALUES (
		@IngredientAssemblyID,
		@AssemblyID,
		@Quantity,
		@UnitsID,
		@IngInvID
	)
END

--endregion

GO

--region [dbo].[sp_jncAssembly_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_Delete]
	@IngredientAssemblyID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncAssembly]
WHERE
	[IngredientAssemblyID] = @IngredientAssemblyID

--endregion

GO

--region [dbo].[sp_jncAssembly_DeleteByIngInvID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_DeleteByIngInvID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_DeleteByIngInvID]
	@IngInvID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncAssembly]
WHERE
	[IngInvID] = @IngInvID

GO

--endregion

GO

--region [dbo].[sp_jncAssembly_DeleteByUnitsID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_DeleteByUnitsID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_DeleteByUnitsID]
	@UnitsID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncAssembly]
WHERE
	[UnitsID] = @UnitsID

GO

--endregion

GO

--region [dbo].[sp_jncAssembly_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[jncAssembly]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_jncAssembly_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_Select]
	@IngredientAssemblyID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]
WHERE
	[IngredientAssemblyID] = @IngredientAssemblyID

--endregion

GO

--region [dbo].[sp_jncAssembly_SelectByIngInvID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_SelectByIngInvID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_SelectByIngInvID]
	@IngInvID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]
WHERE
	[IngInvID] = @IngInvID

--endregion

GO

--region [dbo].[sp_jncAssembly_SelectByUnitsID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_SelectByUnitsID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_SelectByUnitsID]
	@UnitsID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]
WHERE
	[UnitsID] = @UnitsID

--endregion

GO

--region [dbo].[sp_jncAssembly_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncAssembly_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncAssembly_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]

--endregion

GO

--region [dbo].[sp_jncAssembly_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncAssembly_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncAssembly_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientAssemblyID],
	[AssemblyID],
	[Quantity],
	[UnitsID],
	[IngInvID]
FROM
	[dbo].[jncAssembly]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_Insert]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_Update]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_Delete]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_Select]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_SelectByAddressID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_SelectByAddressID]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_SelectByClientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_SelectByClientID]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_DeleteByAddressID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_DeleteByAddressID]

IF OBJECT_ID(N'[dbo].[sp_jncClientAddresses_DeleteByClientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientAddresses_DeleteByClientID]

--endregion

GO

--region [dbo].[sp_jncClientAddresses_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_Insert]
	@ClientID int,
	@AddressID int,
	@AddressType int,
	@Notes nvarchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[jncClientAddresses] (
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
) VALUES (
	@ClientID,
	@AddressID,
	@AddressType,
	@Notes
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_jncClientAddresses_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_Update]
	@ID int,
	@ClientID int,
	@AddressID int,
	@AddressType int,
	@Notes nvarchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[jncClientAddresses] SET
	[ClientID] = @ClientID,
	[AddressID] = @AddressID,
	[AddressType] = @AddressType,
	[Notes] = @Notes
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncClientAddresses_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_InsertUpdate]
	@ID int,
	@ClientID int,
	@AddressID int,
	@AddressType int,
	@Notes nvarchar(50)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ID] FROM [dbo].[jncClientAddresses] WHERE [ID] = @ID)
BEGIN
	UPDATE [dbo].[jncClientAddresses] SET
		[ClientID] = @ClientID,
		[AddressID] = @AddressID,
		[AddressType] = @AddressType,
		[Notes] = @Notes
	WHERE
		[ID] = @ID
END
ELSE
BEGIN
	INSERT INTO [dbo].[jncClientAddresses] (
		[ID],
		[ClientID],
		[AddressID],
		[AddressType],
		[Notes]
	) VALUES (
		@ID,
		@ClientID,
		@AddressID,
		@AddressType,
		@Notes
	)
END

--endregion

GO

--region [dbo].[sp_jncClientAddresses_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_Delete]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncClientAddresses]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncClientAddresses_DeleteByAddressID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_DeleteByAddressID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_DeleteByAddressID]
	@AddressID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncClientAddresses]
WHERE
	[AddressID] = @AddressID

GO

--endregion

GO

--region [dbo].[sp_jncClientAddresses_DeleteByClientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_DeleteByClientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_DeleteByClientID]
	@ClientID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncClientAddresses]
WHERE
	[ClientID] = @ClientID

GO

--endregion

GO

--region [dbo].[sp_jncClientAddresses_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[jncClientAddresses]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_jncClientAddresses_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_Select]
	@ID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncClientAddresses_SelectByAddressID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_SelectByAddressID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_SelectByAddressID]
	@AddressID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]
WHERE
	[AddressID] = @AddressID

--endregion

GO

--region [dbo].[sp_jncClientAddresses_SelectByClientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_SelectByClientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_SelectByClientID]
	@ClientID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]
WHERE
	[ClientID] = @ClientID

--endregion

GO

--region [dbo].[sp_jncClientAddresses_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncClientAddresses_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncClientAddresses_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]

--endregion

GO

--region [dbo].[sp_jncClientAddresses_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientAddresses_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientAddresses_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncClientAddresses]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_Insert]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_Update]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_Delete]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_Select]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_SelectByClientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_SelectByClientID]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_SelectByContactID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_SelectByContactID]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_DeleteByClientID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_DeleteByClientID]

IF OBJECT_ID(N'[dbo].[sp_jncClientContacts_DeleteByContactID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncClientContacts_DeleteByContactID]

--endregion

GO

--region [dbo].[sp_jncClientContacts_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_Insert]
	@ClientID int,
	@ContactID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[jncClientContacts] (
	[ClientID],
	[ContactID]
) VALUES (
	@ClientID,
	@ContactID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_jncClientContacts_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_Update]
	@ID int,
	@ClientID int,
	@ContactID int
AS

SET NOCOUNT ON

UPDATE [dbo].[jncClientContacts] SET
	[ClientID] = @ClientID,
	[ContactID] = @ContactID
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncClientContacts_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_InsertUpdate]
	@ID int,
	@ClientID int,
	@ContactID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ID] FROM [dbo].[jncClientContacts] WHERE [ID] = @ID)
BEGIN
	UPDATE [dbo].[jncClientContacts] SET
		[ClientID] = @ClientID,
		[ContactID] = @ContactID
	WHERE
		[ID] = @ID
END
ELSE
BEGIN
	INSERT INTO [dbo].[jncClientContacts] (
		[ID],
		[ClientID],
		[ContactID]
	) VALUES (
		@ID,
		@ClientID,
		@ContactID
	)
END

--endregion

GO

--region [dbo].[sp_jncClientContacts_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_Delete]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncClientContacts]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncClientContacts_DeleteByClientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_DeleteByClientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_DeleteByClientID]
	@ClientID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncClientContacts]
WHERE
	[ClientID] = @ClientID

GO

--endregion

GO

--region [dbo].[sp_jncClientContacts_DeleteByContactID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_DeleteByContactID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_DeleteByContactID]
	@ContactID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncClientContacts]
WHERE
	[ContactID] = @ContactID

GO

--endregion

GO

--region [dbo].[sp_jncClientContacts_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[jncClientContacts]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_jncClientContacts_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_Select]
	@ID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncClientContacts_SelectByClientID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_SelectByClientID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_SelectByClientID]
	@ClientID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]
WHERE
	[ClientID] = @ClientID

--endregion

GO

--region [dbo].[sp_jncClientContacts_SelectByContactID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_SelectByContactID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_SelectByContactID]
	@ContactID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]
WHERE
	[ContactID] = @ContactID

--endregion

GO

--region [dbo].[sp_jncClientContacts_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncClientContacts_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncClientContacts_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]

--endregion

GO

--region [dbo].[sp_jncClientContacts_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncClientContacts_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncClientContacts_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[ClientID],
	[ContactID]
FROM
	[dbo].[jncClientContacts]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_Insert]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_Update]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_Delete]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_Select]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_SelectByContactID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectByContactID]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_SelectByEmployeeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectByEmployeeID]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_DeleteByContactID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_DeleteByContactID]

IF OBJECT_ID(N'[dbo].[sp_jncEmployeeContacts_DeleteByEmployeeID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncEmployeeContacts_DeleteByEmployeeID]

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_Insert]
	@EmployeeID int,
	@ContactID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[jncEmployeeContacts] (
	[EmployeeID],
	[ContactID]
) VALUES (
	@EmployeeID,
	@ContactID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_Update]
	@ID int,
	@EmployeeID int,
	@ContactID int
AS

SET NOCOUNT ON

UPDATE [dbo].[jncEmployeeContacts] SET
	[EmployeeID] = @EmployeeID,
	[ContactID] = @ContactID
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_InsertUpdate]
	@ID int,
	@EmployeeID int,
	@ContactID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ID] FROM [dbo].[jncEmployeeContacts] WHERE [ID] = @ID)
BEGIN
	UPDATE [dbo].[jncEmployeeContacts] SET
		[EmployeeID] = @EmployeeID,
		[ContactID] = @ContactID
	WHERE
		[ID] = @ID
END
ELSE
BEGIN
	INSERT INTO [dbo].[jncEmployeeContacts] (
		[ID],
		[EmployeeID],
		[ContactID]
	) VALUES (
		@ID,
		@EmployeeID,
		@ContactID
	)
END

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_Delete]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncEmployeeContacts]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_DeleteByContactID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_DeleteByContactID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_DeleteByContactID]
	@ContactID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncEmployeeContacts]
WHERE
	[ContactID] = @ContactID

GO

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_DeleteByEmployeeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_DeleteByEmployeeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_DeleteByEmployeeID]
	@EmployeeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncEmployeeContacts]
WHERE
	[EmployeeID] = @EmployeeID

GO

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[jncEmployeeContacts]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_Select]
	@ID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_SelectByContactID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_SelectByContactID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectByContactID]
	@ContactID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]
WHERE
	[ContactID] = @ContactID

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_SelectByEmployeeID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_SelectByEmployeeID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectByEmployeeID]
	@EmployeeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]
WHERE
	[EmployeeID] = @EmployeeID

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncEmployeeContacts_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncEmployeeContacts_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]

--endregion

GO

--region [dbo].[sp_jncEmployeeContacts_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncEmployeeContacts_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncEmployeeContacts_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[EmployeeID],
	[ContactID]
FROM
	[dbo].[jncEmployeeContacts]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_Insert]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_Update]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_Delete]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_Select]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_SelectByOrderNumber]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectByOrderNumber]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_SelectByPackageID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectByPackageID]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_DeleteByOrderNumber]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_DeleteByOrderNumber]

IF OBJECT_ID(N'[dbo].[sp_jncOrdersAndPackages_DeleteByPackageID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncOrdersAndPackages_DeleteByPackageID]

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_Insert]
	@OrderNumber int,
	@PackageID int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[jncOrdersAndPackages] (
	[OrderNumber],
	[PackageID]
) VALUES (
	@OrderNumber,
	@PackageID
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_Update]
	@ID int,
	@OrderNumber int,
	@PackageID int
AS

SET NOCOUNT ON

UPDATE [dbo].[jncOrdersAndPackages] SET
	[OrderNumber] = @OrderNumber,
	[PackageID] = @PackageID
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_InsertUpdate]
	@ID int,
	@OrderNumber int,
	@PackageID int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ID] FROM [dbo].[jncOrdersAndPackages] WHERE [ID] = @ID)
BEGIN
	UPDATE [dbo].[jncOrdersAndPackages] SET
		[OrderNumber] = @OrderNumber,
		[PackageID] = @PackageID
	WHERE
		[ID] = @ID
END
ELSE
BEGIN
	INSERT INTO [dbo].[jncOrdersAndPackages] (
		[ID],
		[OrderNumber],
		[PackageID]
	) VALUES (
		@ID,
		@OrderNumber,
		@PackageID
	)
END

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_Delete]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncOrdersAndPackages]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_DeleteByOrderNumber]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_DeleteByOrderNumber]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_DeleteByOrderNumber]
	@OrderNumber int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncOrdersAndPackages]
WHERE
	[OrderNumber] = @OrderNumber

GO

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_DeleteByPackageID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_DeleteByPackageID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_DeleteByPackageID]
	@PackageID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncOrdersAndPackages]
WHERE
	[PackageID] = @PackageID

GO

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[jncOrdersAndPackages]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_Select]
	@ID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_SelectByOrderNumber]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_SelectByOrderNumber]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectByOrderNumber]
	@OrderNumber int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]
WHERE
	[OrderNumber] = @OrderNumber

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_SelectByPackageID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_SelectByPackageID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectByPackageID]
	@PackageID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]
WHERE
	[PackageID] = @PackageID

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncOrdersAndPackages_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncOrdersAndPackages_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]

--endregion

GO

--region [dbo].[sp_jncOrdersAndPackages_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncOrdersAndPackages_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncOrdersAndPackages_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[OrderNumber],
	[PackageID]
FROM
	[dbo].[jncOrdersAndPackages]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_Insert]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_Update]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_Delete]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_Select]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_SelectByAddressID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_SelectByAddressID]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_SelectByVendorID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_SelectByVendorID]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_DeleteByAddressID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_DeleteByAddressID]

IF OBJECT_ID(N'[dbo].[sp_jncVendorAddresses_DeleteByVendorID]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_jncVendorAddresses_DeleteByVendorID]

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_Insert]
	@VendorID int,
	@AddressID int,
	@AddressType int,
	@Notes text
AS

SET NOCOUNT ON

INSERT INTO [dbo].[jncVendorAddresses] (
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
) VALUES (
	@VendorID,
	@AddressID,
	@AddressType,
	@Notes
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_Update]
	@ID int,
	@VendorID int,
	@AddressID int,
	@AddressType int,
	@Notes text
AS

SET NOCOUNT ON

UPDATE [dbo].[jncVendorAddresses] SET
	[VendorID] = @VendorID,
	[AddressID] = @AddressID,
	[AddressType] = @AddressType,
	[Notes] = @Notes
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_InsertUpdate]
	@ID int,
	@VendorID int,
	@AddressID int,
	@AddressType int,
	@Notes text
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ID] FROM [dbo].[jncVendorAddresses] WHERE [ID] = @ID)
BEGIN
	UPDATE [dbo].[jncVendorAddresses] SET
		[VendorID] = @VendorID,
		[AddressID] = @AddressID,
		[AddressType] = @AddressType,
		[Notes] = @Notes
	WHERE
		[ID] = @ID
END
ELSE
BEGIN
	INSERT INTO [dbo].[jncVendorAddresses] (
		[ID],
		[VendorID],
		[AddressID],
		[AddressType],
		[Notes]
	) VALUES (
		@ID,
		@VendorID,
		@AddressID,
		@AddressType,
		@Notes
	)
END

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_Delete]
	@ID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncVendorAddresses]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_DeleteByAddressID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_DeleteByAddressID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_DeleteByAddressID]
	@AddressID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncVendorAddresses]
WHERE
	[AddressID] = @AddressID

GO

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_DeleteByVendorID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_DeleteByVendorID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_DeleteByVendorID]
	@VendorID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[jncVendorAddresses]
WHERE
	[VendorID] = @VendorID

GO

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[jncVendorAddresses]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_Select]
	@ID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]
WHERE
	[ID] = @ID

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_SelectByAddressID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_SelectByAddressID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_SelectByAddressID]
	@AddressID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]
WHERE
	[AddressID] = @AddressID

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_SelectByVendorID]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_SelectByVendorID]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_SelectByVendorID]
	@VendorID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]
WHERE
	[VendorID] = @VendorID

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncVendorAddresses_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_jncVendorAddresses_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]

--endregion

GO

--region [dbo].[sp_jncVendorAddresses_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_jncVendorAddresses_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_jncVendorAddresses_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ID],
	[VendorID],
	[AddressID],
	[AddressType],
	[Notes]
FROM
	[dbo].[jncVendorAddresses]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_Insert]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_Update]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_Delete]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_Select]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luAssemblyTypes_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luAssemblyTypes_SelectPaged]

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_Insert]
	@AssemblyType nchar(20)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luAssemblyTypes] (
	[AssemblyType]
) VALUES (
	@AssemblyType
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_Update]
	@AssemblyTypeID int,
	@AssemblyType nchar(20)
AS

SET NOCOUNT ON

UPDATE [dbo].[luAssemblyTypes] SET
	[AssemblyType] = @AssemblyType
WHERE
	[AssemblyTypeID] = @AssemblyTypeID

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_InsertUpdate]
	@AssemblyTypeID int,
	@AssemblyType nchar(20)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [AssemblyTypeID] FROM [dbo].[luAssemblyTypes] WHERE [AssemblyTypeID] = @AssemblyTypeID)
BEGIN
	UPDATE [dbo].[luAssemblyTypes] SET
		[AssemblyType] = @AssemblyType
	WHERE
		[AssemblyTypeID] = @AssemblyTypeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luAssemblyTypes] (
		[AssemblyTypeID],
		[AssemblyType]
	) VALUES (
		@AssemblyTypeID,
		@AssemblyType
	)
END

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_Delete]
	@AssemblyTypeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luAssemblyTypes]
WHERE
	[AssemblyTypeID] = @AssemblyTypeID

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luAssemblyTypes]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_Select]
	@AssemblyTypeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyTypeID],
	[AssemblyType]
FROM
	[dbo].[luAssemblyTypes]
WHERE
	[AssemblyTypeID] = @AssemblyTypeID

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[AssemblyTypeID],
	[AssemblyType]
FROM
	[dbo].[luAssemblyTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luAssemblyTypes_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[AssemblyTypeID],
	[AssemblyType]
FROM
	[dbo].[luAssemblyTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luAssemblyTypes_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyTypeID],
	[AssemblyType]
FROM
	[dbo].[luAssemblyTypes]

--endregion

GO

--region [dbo].[sp_luAssemblyTypes_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luAssemblyTypes_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luAssemblyTypes_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[AssemblyTypeID],
	[AssemblyType]
FROM
	[dbo].[luAssemblyTypes]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luCities_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_Insert]

IF OBJECT_ID(N'[dbo].[sp_luCities_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_Update]

IF OBJECT_ID(N'[dbo].[sp_luCities_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luCities_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_Delete]

IF OBJECT_ID(N'[dbo].[sp_luCities_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luCities_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_Select]

IF OBJECT_ID(N'[dbo].[sp_luCities_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luCities_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luCities_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luCities_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_luCities_SelectByProvinceCode]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_SelectByProvinceCode]

IF OBJECT_ID(N'[dbo].[sp_luCities_DeleteByProvinceCode]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCities_DeleteByProvinceCode]

--endregion

GO

--region [dbo].[sp_luCities_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_Insert]
	@City nvarchar(35),
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luCities] (
	[City],
	[ProvinceCode]
) VALUES (
	@City,
	@ProvinceCode
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luCities_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_Update]
	@CityID int,
	@City nvarchar(35),
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON

UPDATE [dbo].[luCities] SET
	[City] = @City,
	[ProvinceCode] = @ProvinceCode
WHERE
	[CityID] = @CityID

--endregion

GO

--region [dbo].[sp_luCities_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_InsertUpdate]
	@CityID int,
	@City nvarchar(35),
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [CityID] FROM [dbo].[luCities] WHERE [CityID] = @CityID)
BEGIN
	UPDATE [dbo].[luCities] SET
		[City] = @City,
		[ProvinceCode] = @ProvinceCode
	WHERE
		[CityID] = @CityID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luCities] (
		[CityID],
		[City],
		[ProvinceCode]
	) VALUES (
		@CityID,
		@City,
		@ProvinceCode
	)
END

--endregion

GO

--region [dbo].[sp_luCities_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_Delete]
	@CityID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luCities]
WHERE
	[CityID] = @CityID

--endregion

GO

--region [dbo].[sp_luCities_DeleteByProvinceCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_DeleteByProvinceCode]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_DeleteByProvinceCode]
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luCities]
WHERE
	[ProvinceCode] = @ProvinceCode

GO

--endregion

GO

--region [dbo].[sp_luCities_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luCities]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luCities_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_Select]
	@CityID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CityID],
	[City],
	[ProvinceCode]
FROM
	[dbo].[luCities]
WHERE
	[CityID] = @CityID

--endregion

GO

--region [dbo].[sp_luCities_SelectByProvinceCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_SelectByProvinceCode]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_SelectByProvinceCode]
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CityID],
	[City],
	[ProvinceCode]
FROM
	[dbo].[luCities]
WHERE
	[ProvinceCode] = @ProvinceCode

--endregion

GO

--region [dbo].[sp_luCities_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[CityID],
	[City],
	[ProvinceCode]
FROM
	[dbo].[luCities]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luCities_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[CityID],
	[City],
	[ProvinceCode]
FROM
	[dbo].[luCities]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luCities_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CityID],
	[City],
	[ProvinceCode]
FROM
	[dbo].[luCities]

--endregion

GO

--region [dbo].[sp_luCities_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCities_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCities_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CityID],
	[City],
	[ProvinceCode]
FROM
	[dbo].[luCities]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luContactType_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_Insert]

IF OBJECT_ID(N'[dbo].[sp_luContactType_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_Update]

IF OBJECT_ID(N'[dbo].[sp_luContactType_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luContactType_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_Delete]

IF OBJECT_ID(N'[dbo].[sp_luContactType_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luContactType_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_Select]

IF OBJECT_ID(N'[dbo].[sp_luContactType_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luContactType_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luContactType_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luContactType_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luContactType_SelectPaged]

--endregion

GO

--region [dbo].[sp_luContactType_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_Insert]
	@ContactTypeID tinyint,
	@ContactType nvarchar(50)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luContactType] (
	[ContactTypeID],
	[ContactType]
) VALUES (
	@ContactTypeID,
	@ContactType
)

--endregion

GO

--region [dbo].[sp_luContactType_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_Update]
	@ContactTypeID tinyint,
	@ContactType nvarchar(50)
AS

SET NOCOUNT ON

UPDATE [dbo].[luContactType] SET
	[ContactType] = @ContactType
WHERE
	[ContactTypeID] = @ContactTypeID

--endregion

GO

--region [dbo].[sp_luContactType_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_InsertUpdate]
	@ContactTypeID tinyint,
	@ContactType nvarchar(50)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ContactTypeID] FROM [dbo].[luContactType] WHERE [ContactTypeID] = @ContactTypeID)
BEGIN
	UPDATE [dbo].[luContactType] SET
		[ContactType] = @ContactType
	WHERE
		[ContactTypeID] = @ContactTypeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luContactType] (
		[ContactTypeID],
		[ContactType]
	) VALUES (
		@ContactTypeID,
		@ContactType
	)
END

--endregion

GO

--region [dbo].[sp_luContactType_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_Delete]
	@ContactTypeID tinyint
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luContactType]
WHERE
	[ContactTypeID] = @ContactTypeID

--endregion

GO

--region [dbo].[sp_luContactType_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luContactType]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luContactType_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_Select]
	@ContactTypeID tinyint
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactTypeID],
	[ContactType]
FROM
	[dbo].[luContactType]
WHERE
	[ContactTypeID] = @ContactTypeID

--endregion

GO

--region [dbo].[sp_luContactType_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ContactTypeID],
	[ContactType]
FROM
	[dbo].[luContactType]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luContactType_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ContactTypeID],
	[ContactType]
FROM
	[dbo].[luContactType]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luContactType_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactTypeID],
	[ContactType]
FROM
	[dbo].[luContactType]

--endregion

GO

--region [dbo].[sp_luContactType_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luContactType_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luContactType_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ContactTypeID],
	[ContactType]
FROM
	[dbo].[luContactType]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luCountries_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_Insert]

IF OBJECT_ID(N'[dbo].[sp_luCountries_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_Update]

IF OBJECT_ID(N'[dbo].[sp_luCountries_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luCountries_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_Delete]

IF OBJECT_ID(N'[dbo].[sp_luCountries_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luCountries_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_Select]

IF OBJECT_ID(N'[dbo].[sp_luCountries_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luCountries_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luCountries_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luCountries_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luCountries_SelectPaged]

--endregion

GO

--region [dbo].[sp_luCountries_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_Insert]
	@CountryCode nvarchar(2),
	@CountryName nvarchar(13)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luCountries] (
	[CountryCode],
	[CountryName]
) VALUES (
	@CountryCode,
	@CountryName
)

--endregion

GO

--region [dbo].[sp_luCountries_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_Update]
	@CountryCode nvarchar(2),
	@CountryName nvarchar(13)
AS

SET NOCOUNT ON

UPDATE [dbo].[luCountries] SET
	[CountryName] = @CountryName
WHERE
	[CountryCode] = @CountryCode

--endregion

GO

--region [dbo].[sp_luCountries_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_InsertUpdate]
	@CountryCode nvarchar(2),
	@CountryName nvarchar(13)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [CountryCode] FROM [dbo].[luCountries] WHERE [CountryCode] = @CountryCode)
BEGIN
	UPDATE [dbo].[luCountries] SET
		[CountryName] = @CountryName
	WHERE
		[CountryCode] = @CountryCode
END
ELSE
BEGIN
	INSERT INTO [dbo].[luCountries] (
		[CountryCode],
		[CountryName]
	) VALUES (
		@CountryCode,
		@CountryName
	)
END

--endregion

GO

--region [dbo].[sp_luCountries_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_Delete]
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luCountries]
WHERE
	[CountryCode] = @CountryCode

--endregion

GO

--region [dbo].[sp_luCountries_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luCountries]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luCountries_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_Select]
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CountryCode],
	[CountryName]
FROM
	[dbo].[luCountries]
WHERE
	[CountryCode] = @CountryCode

--endregion

GO

--region [dbo].[sp_luCountries_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[CountryCode],
	[CountryName]
FROM
	[dbo].[luCountries]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luCountries_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[CountryCode],
	[CountryName]
FROM
	[dbo].[luCountries]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luCountries_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CountryCode],
	[CountryName]
FROM
	[dbo].[luCountries]

--endregion

GO

--region [dbo].[sp_luCountries_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luCountries_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luCountries_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[CountryCode],
	[CountryName]
FROM
	[dbo].[luCountries]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luIngredients_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_Insert]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_Update]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_Delete]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_Select]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luIngredients_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luIngredients_SelectPaged]

--endregion

GO

--region [dbo].[sp_luIngredients_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_Insert]
	@Ingredient nvarchar(20)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luIngredients] (
	[Ingredient]
) VALUES (
	@Ingredient
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luIngredients_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_Update]
	@IngredientID int,
	@Ingredient nvarchar(20)
AS

SET NOCOUNT ON

UPDATE [dbo].[luIngredients] SET
	[Ingredient] = @Ingredient
WHERE
	[IngredientID] = @IngredientID

--endregion

GO

--region [dbo].[sp_luIngredients_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_InsertUpdate]
	@IngredientID int,
	@Ingredient nvarchar(20)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [IngredientID] FROM [dbo].[luIngredients] WHERE [IngredientID] = @IngredientID)
BEGIN
	UPDATE [dbo].[luIngredients] SET
		[Ingredient] = @Ingredient
	WHERE
		[IngredientID] = @IngredientID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luIngredients] (
		[IngredientID],
		[Ingredient]
	) VALUES (
		@IngredientID,
		@Ingredient
	)
END

--endregion

GO

--region [dbo].[sp_luIngredients_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_Delete]
	@IngredientID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luIngredients]
WHERE
	[IngredientID] = @IngredientID

--endregion

GO

--region [dbo].[sp_luIngredients_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luIngredients]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luIngredients_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_Select]
	@IngredientID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientID],
	[Ingredient]
FROM
	[dbo].[luIngredients]
WHERE
	[IngredientID] = @IngredientID

--endregion

GO

--region [dbo].[sp_luIngredients_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[IngredientID],
	[Ingredient]
FROM
	[dbo].[luIngredients]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luIngredients_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[IngredientID],
	[Ingredient]
FROM
	[dbo].[luIngredients]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luIngredients_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientID],
	[Ingredient]
FROM
	[dbo].[luIngredients]

--endregion

GO

--region [dbo].[sp_luIngredients_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luIngredients_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luIngredients_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[IngredientID],
	[Ingredient]
FROM
	[dbo].[luIngredients]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_Insert]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_Update]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_Delete]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_Select]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luPhoneTypes_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPhoneTypes_SelectPaged]

--endregion

GO

--region [dbo].[sp_luPhoneTypes_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_Insert]
	@PhoneTypeID tinyint,
	@PhoneType nvarchar(10)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luPhoneTypes] (
	[PhoneTypeID],
	[PhoneType]
) VALUES (
	@PhoneTypeID,
	@PhoneType
)

--endregion

GO

--region [dbo].[sp_luPhoneTypes_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_Update]
	@PhoneTypeID tinyint,
	@PhoneType nvarchar(10)
AS

SET NOCOUNT ON

UPDATE [dbo].[luPhoneTypes] SET
	[PhoneType] = @PhoneType
WHERE
	[PhoneTypeID] = @PhoneTypeID

--endregion

GO

--region [dbo].[sp_luPhoneTypes_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_InsertUpdate]
	@PhoneTypeID tinyint,
	@PhoneType nvarchar(10)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [PhoneTypeID] FROM [dbo].[luPhoneTypes] WHERE [PhoneTypeID] = @PhoneTypeID)
BEGIN
	UPDATE [dbo].[luPhoneTypes] SET
		[PhoneType] = @PhoneType
	WHERE
		[PhoneTypeID] = @PhoneTypeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luPhoneTypes] (
		[PhoneTypeID],
		[PhoneType]
	) VALUES (
		@PhoneTypeID,
		@PhoneType
	)
END

--endregion

GO

--region [dbo].[sp_luPhoneTypes_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_Delete]
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luPhoneTypes]
WHERE
	[PhoneTypeID] = @PhoneTypeID

--endregion

GO

--region [dbo].[sp_luPhoneTypes_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luPhoneTypes]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luPhoneTypes_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_Select]
	@PhoneTypeID tinyint
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneTypeID],
	[PhoneType]
FROM
	[dbo].[luPhoneTypes]
WHERE
	[PhoneTypeID] = @PhoneTypeID

--endregion

GO

--region [dbo].[sp_luPhoneTypes_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[PhoneTypeID],
	[PhoneType]
FROM
	[dbo].[luPhoneTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luPhoneTypes_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[PhoneTypeID],
	[PhoneType]
FROM
	[dbo].[luPhoneTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luPhoneTypes_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneTypeID],
	[PhoneType]
FROM
	[dbo].[luPhoneTypes]

--endregion

GO

--region [dbo].[sp_luPhoneTypes_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPhoneTypes_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPhoneTypes_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PhoneTypeID],
	[PhoneType]
FROM
	[dbo].[luPhoneTypes]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luPositions_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_Insert]

IF OBJECT_ID(N'[dbo].[sp_luPositions_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_Update]

IF OBJECT_ID(N'[dbo].[sp_luPositions_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luPositions_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_Delete]

IF OBJECT_ID(N'[dbo].[sp_luPositions_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luPositions_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_Select]

IF OBJECT_ID(N'[dbo].[sp_luPositions_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luPositions_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luPositions_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luPositions_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luPositions_SelectPaged]

--endregion

GO

--region [dbo].[sp_luPositions_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_Insert]
	@Position nvarchar(20)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luPositions] (
	[Position]
) VALUES (
	@Position
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luPositions_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_Update]
	@PositionID int,
	@Position nvarchar(20)
AS

SET NOCOUNT ON

UPDATE [dbo].[luPositions] SET
	[Position] = @Position
WHERE
	[PositionID] = @PositionID

--endregion

GO

--region [dbo].[sp_luPositions_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_InsertUpdate]
	@PositionID int,
	@Position nvarchar(20)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [PositionID] FROM [dbo].[luPositions] WHERE [PositionID] = @PositionID)
BEGIN
	UPDATE [dbo].[luPositions] SET
		[Position] = @Position
	WHERE
		[PositionID] = @PositionID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luPositions] (
		[PositionID],
		[Position]
	) VALUES (
		@PositionID,
		@Position
	)
END

--endregion

GO

--region [dbo].[sp_luPositions_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_Delete]
	@PositionID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luPositions]
WHERE
	[PositionID] = @PositionID

--endregion

GO

--region [dbo].[sp_luPositions_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luPositions]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luPositions_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_Select]
	@PositionID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PositionID],
	[Position]
FROM
	[dbo].[luPositions]
WHERE
	[PositionID] = @PositionID

--endregion

GO

--region [dbo].[sp_luPositions_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[PositionID],
	[Position]
FROM
	[dbo].[luPositions]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luPositions_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[PositionID],
	[Position]
FROM
	[dbo].[luPositions]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luPositions_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PositionID],
	[Position]
FROM
	[dbo].[luPositions]

--endregion

GO

--region [dbo].[sp_luPositions_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luPositions_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luPositions_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[PositionID],
	[Position]
FROM
	[dbo].[luPositions]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luProvinces_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_Insert]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_Update]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_Delete]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_Select]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_SelectByCountryCode]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_SelectByCountryCode]

IF OBJECT_ID(N'[dbo].[sp_luProvinces_DeleteByCountryCode]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luProvinces_DeleteByCountryCode]

--endregion

GO

--region [dbo].[sp_luProvinces_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_Insert]
	@ProvinceCode nvarchar(2),
	@ProvinceName nvarchar(25),
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luProvinces] (
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
) VALUES (
	@ProvinceCode,
	@ProvinceName,
	@CountryCode
)

--endregion

GO

--region [dbo].[sp_luProvinces_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_Update]
	@ProvinceCode nvarchar(2),
	@ProvinceName nvarchar(25),
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON

UPDATE [dbo].[luProvinces] SET
	[ProvinceName] = @ProvinceName,
	[CountryCode] = @CountryCode
WHERE
	[ProvinceCode] = @ProvinceCode

--endregion

GO

--region [dbo].[sp_luProvinces_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_InsertUpdate]
	@ProvinceCode nvarchar(2),
	@ProvinceName nvarchar(25),
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [ProvinceCode] FROM [dbo].[luProvinces] WHERE [ProvinceCode] = @ProvinceCode)
BEGIN
	UPDATE [dbo].[luProvinces] SET
		[ProvinceName] = @ProvinceName,
		[CountryCode] = @CountryCode
	WHERE
		[ProvinceCode] = @ProvinceCode
END
ELSE
BEGIN
	INSERT INTO [dbo].[luProvinces] (
		[ProvinceCode],
		[ProvinceName],
		[CountryCode]
	) VALUES (
		@ProvinceCode,
		@ProvinceName,
		@CountryCode
	)
END

--endregion

GO

--region [dbo].[sp_luProvinces_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_Delete]
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luProvinces]
WHERE
	[ProvinceCode] = @ProvinceCode

--endregion

GO

--region [dbo].[sp_luProvinces_DeleteByCountryCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_DeleteByCountryCode]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_DeleteByCountryCode]
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luProvinces]
WHERE
	[CountryCode] = @CountryCode

GO

--endregion

GO

--region [dbo].[sp_luProvinces_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luProvinces]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luProvinces_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_Select]
	@ProvinceCode nvarchar(2)
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
FROM
	[dbo].[luProvinces]
WHERE
	[ProvinceCode] = @ProvinceCode

--endregion

GO

--region [dbo].[sp_luProvinces_SelectByCountryCode]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_SelectByCountryCode]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_SelectByCountryCode]
	@CountryCode nvarchar(2)
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
FROM
	[dbo].[luProvinces]
WHERE
	[CountryCode] = @CountryCode

--endregion

GO

--region [dbo].[sp_luProvinces_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
FROM
	[dbo].[luProvinces]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luProvinces_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
FROM
	[dbo].[luProvinces]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luProvinces_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
FROM
	[dbo].[luProvinces]

--endregion

GO

--region [dbo].[sp_luProvinces_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luProvinces_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luProvinces_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[ProvinceCode],
	[ProvinceName],
	[CountryCode]
FROM
	[dbo].[luProvinces]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_Insert]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_Update]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_Delete]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_Select]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_SelectPaged]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_SelectByIngredientType]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_SelectByIngredientType]

IF OBJECT_ID(N'[dbo].[sp_luTimeTypes_DeleteByIngredientType]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luTimeTypes_DeleteByIngredientType]

--endregion

GO

--region [dbo].[sp_luTimeTypes_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_Insert]
	@TimeType nvarchar(20),
	@IngredientType int
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luTimeTypes] (
	[TimeType],
	[IngredientType]
) VALUES (
	@TimeType,
	@IngredientType
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luTimeTypes_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_Update]
	@TimeTypeID int,
	@TimeType nvarchar(20),
	@IngredientType int
AS

SET NOCOUNT ON

UPDATE [dbo].[luTimeTypes] SET
	[TimeType] = @TimeType,
	[IngredientType] = @IngredientType
WHERE
	[TimeTypeID] = @TimeTypeID

--endregion

GO

--region [dbo].[sp_luTimeTypes_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_InsertUpdate]
	@TimeTypeID int,
	@TimeType nvarchar(20),
	@IngredientType int
AS

SET NOCOUNT ON

IF EXISTS(SELECT [TimeTypeID] FROM [dbo].[luTimeTypes] WHERE [TimeTypeID] = @TimeTypeID)
BEGIN
	UPDATE [dbo].[luTimeTypes] SET
		[TimeType] = @TimeType,
		[IngredientType] = @IngredientType
	WHERE
		[TimeTypeID] = @TimeTypeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luTimeTypes] (
		[TimeTypeID],
		[TimeType],
		[IngredientType]
	) VALUES (
		@TimeTypeID,
		@TimeType,
		@IngredientType
	)
END

--endregion

GO

--region [dbo].[sp_luTimeTypes_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_Delete]
	@TimeTypeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luTimeTypes]
WHERE
	[TimeTypeID] = @TimeTypeID

--endregion

GO

--region [dbo].[sp_luTimeTypes_DeleteByIngredientType]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_DeleteByIngredientType]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_DeleteByIngredientType]
	@IngredientType int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luTimeTypes]
WHERE
	[IngredientType] = @IngredientType

GO

--endregion

GO

--region [dbo].[sp_luTimeTypes_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luTimeTypes]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luTimeTypes_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_Select]
	@TimeTypeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeTypeID],
	[TimeType],
	[IngredientType]
FROM
	[dbo].[luTimeTypes]
WHERE
	[TimeTypeID] = @TimeTypeID

--endregion

GO

--region [dbo].[sp_luTimeTypes_SelectByIngredientType]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_SelectByIngredientType]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_SelectByIngredientType]
	@IngredientType int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeTypeID],
	[TimeType],
	[IngredientType]
FROM
	[dbo].[luTimeTypes]
WHERE
	[IngredientType] = @IngredientType

--endregion

GO

--region [dbo].[sp_luTimeTypes_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[TimeTypeID],
	[TimeType],
	[IngredientType]
FROM
	[dbo].[luTimeTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luTimeTypes_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[TimeTypeID],
	[TimeType],
	[IngredientType]
FROM
	[dbo].[luTimeTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luTimeTypes_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeTypeID],
	[TimeType],
	[IngredientType]
FROM
	[dbo].[luTimeTypes]

--endregion

GO

--region [dbo].[sp_luTimeTypes_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luTimeTypes_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luTimeTypes_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TimeTypeID],
	[TimeType],
	[IngredientType]
FROM
	[dbo].[luTimeTypes]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luUnits_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_Insert]

IF OBJECT_ID(N'[dbo].[sp_luUnits_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_Update]

IF OBJECT_ID(N'[dbo].[sp_luUnits_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luUnits_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_Delete]

IF OBJECT_ID(N'[dbo].[sp_luUnits_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luUnits_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_Select]

IF OBJECT_ID(N'[dbo].[sp_luUnits_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luUnits_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luUnits_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luUnits_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luUnits_SelectPaged]

--endregion

GO

--region [dbo].[sp_luUnits_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_Insert]
	@Units nvarchar(20)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luUnits] (
	[Units]
) VALUES (
	@Units
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luUnits_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_Update]
	@UnitsID int,
	@Units nvarchar(20)
AS

SET NOCOUNT ON

UPDATE [dbo].[luUnits] SET
	[Units] = @Units
WHERE
	[UnitsID] = @UnitsID

--endregion

GO

--region [dbo].[sp_luUnits_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_InsertUpdate]
	@UnitsID int,
	@Units nvarchar(20)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [UnitsID] FROM [dbo].[luUnits] WHERE [UnitsID] = @UnitsID)
BEGIN
	UPDATE [dbo].[luUnits] SET
		[Units] = @Units
	WHERE
		[UnitsID] = @UnitsID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luUnits] (
		[UnitsID],
		[Units]
	) VALUES (
		@UnitsID,
		@Units
	)
END

--endregion

GO

--region [dbo].[sp_luUnits_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_Delete]
	@UnitsID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luUnits]
WHERE
	[UnitsID] = @UnitsID

--endregion

GO

--region [dbo].[sp_luUnits_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luUnits]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luUnits_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_Select]
	@UnitsID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[UnitsID],
	[Units]
FROM
	[dbo].[luUnits]
WHERE
	[UnitsID] = @UnitsID

--endregion

GO

--region [dbo].[sp_luUnits_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[UnitsID],
	[Units]
FROM
	[dbo].[luUnits]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luUnits_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[UnitsID],
	[Units]
FROM
	[dbo].[luUnits]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luUnits_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[UnitsID],
	[Units]
FROM
	[dbo].[luUnits]

--endregion

GO

--region [dbo].[sp_luUnits_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luUnits_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luUnits_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[UnitsID],
	[Units]
FROM
	[dbo].[luUnits]

--endregion

GO

--region Drop Existing Procedures

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_Insert]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_Insert]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_Update]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_Update]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_InsertUpdate]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_InsertUpdate]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_Delete]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_Delete]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_DeleteDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_DeleteDynamic]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_Select]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_Select]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_SelectDynamic]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_SelectDynamic]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_SelectDynamic_TopN]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_SelectDynamic_TopN]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_SelectAll]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_SelectAll]

IF OBJECT_ID(N'[dbo].[sp_luVehicleTypes_SelectPaged]') IS NOT NULL
	DROP PROCEDURE [dbo].[sp_luVehicleTypes_SelectPaged]

--endregion

GO

--region [dbo].[sp_luVehicleTypes_Insert]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_Insert]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_Insert]
	@Description nvarchar(30)
AS

SET NOCOUNT ON

INSERT INTO [dbo].[luVehicleTypes] (
	[Description]
) VALUES (
	@Description
);

SELECT @@IDENTITY

--endregion

GO

--region [dbo].[sp_luVehicleTypes_Update]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_Update]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_Update]
	@TypeID int,
	@Description nvarchar(30)
AS

SET NOCOUNT ON

UPDATE [dbo].[luVehicleTypes] SET
	[Description] = @Description
WHERE
	[TypeID] = @TypeID

--endregion

GO

--region [dbo].[sp_luVehicleTypes_InsertUpdate]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_InsertUpdate]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_InsertUpdate]
	@TypeID int,
	@Description nvarchar(30)
AS

SET NOCOUNT ON

IF EXISTS(SELECT [TypeID] FROM [dbo].[luVehicleTypes] WHERE [TypeID] = @TypeID)
BEGIN
	UPDATE [dbo].[luVehicleTypes] SET
		[Description] = @Description
	WHERE
		[TypeID] = @TypeID
END
ELSE
BEGIN
	INSERT INTO [dbo].[luVehicleTypes] (
		[TypeID],
		[Description]
	) VALUES (
		@TypeID,
		@Description
	)
END

--endregion

GO

--region [dbo].[sp_luVehicleTypes_Delete]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_Delete]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_Delete]
	@TypeID int
AS

SET NOCOUNT ON

DELETE FROM [dbo].[luVehicleTypes]
WHERE
	[TypeID] = @TypeID

--endregion

GO

--region [dbo].[sp_luVehicleTypes_DeleteDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_DeleteDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_DeleteDynamic]
	@WhereCondition nvarchar(500)
AS

SET NOCOUNT ON

DECLARE @SQL nvarchar(3250)

SET @SQL = '
DELETE FROM
	[dbo].[luVehicleTypes]
WHERE
	' + @WhereCondition

EXEC sp_executesql @SQL

--endregion

GO

--region [dbo].[sp_luVehicleTypes_Select]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_Select]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_Select]
	@TypeID int
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TypeID],
	[Description]
FROM
	[dbo].[luVehicleTypes]
WHERE
	[TypeID] = @TypeID

--endregion

GO

--region [dbo].[sp_luVehicleTypes_SelectDynamic]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_SelectDynamic]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_SelectDynamic]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT
	[TypeID],
	[Description]
FROM
	[dbo].[luVehicleTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luVehicleTypes_SelectDynamic_TopN]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_SelectDynamic_TopN]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_SelectDynamic_TopN]
	@WhereCondition nvarchar(500),
	@OrderByExpression nvarchar(250) = NULL,
	@NumRows nvarchar(25) = '100%'
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

DECLARE @SQL nvarchar(3250)

SET @SQL = '
SELECT TOP ' + @NumRows + ' 
	[TypeID],
	[Description]
FROM
	[dbo].[luVehicleTypes]
WHERE
	' + @WhereCondition

IF @OrderByExpression IS NOT NULL AND LEN(@OrderByExpression) > 0
BEGIN
	SET @SQL = @SQL + '
ORDER BY
	' + @OrderByExpression
END

EXEC sp_executesql @SQL

--endregion

GO




--region [dbo].[sp_luVehicleTypes_SelectAll]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_SelectAll]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_SelectAll]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TypeID],
	[Description]
FROM
	[dbo].[luVehicleTypes]

--endregion

GO

--region [dbo].[sp_luVehicleTypes_SelectPaged]

------------------------------------------------------------------------------------------------------------------------
-- Generated By:   Qasim using CodeSmith 4.1.2
-- Template:       StoredProcedures.cst
-- Procedure Name: [dbo].[sp_luVehicleTypes_SelectPaged]
-- Date Generated: April 30, 2018
------------------------------------------------------------------------------------------------------------------------

CREATE PROCEDURE [dbo].[sp_luVehicleTypes_SelectPaged]
AS

SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL READ COMMITTED

SELECT
	[TypeID],
	[Description]
FROM
	[dbo].[luVehicleTypes]

--endregion

GO

